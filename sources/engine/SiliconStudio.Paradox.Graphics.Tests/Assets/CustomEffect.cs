// <auto-generated>
// Do not edit this file yourself!
//
// This code was generated by Paradox Shader Mixin Code Generator.
// To generate it yourself, please install SiliconStudio.Paradox.VisualStudio.Package .vsix
// and re-save the associated .pdxfx.
// </auto-generated>

using System;
using SiliconStudio.Core;
using SiliconStudio.Paradox.Effects;
using SiliconStudio.Paradox.Graphics;
using SiliconStudio.Paradox.Shaders;
using SiliconStudio.Core.Mathematics;
using Buffer = SiliconStudio.Paradox.Graphics.Buffer;


#line 3 "D:\Code\Paradox\sources\engine\SiliconStudio.Paradox.Graphics.Tests\Assets\CustomEffect.pdxfx"
namespace SiliconStudio.Paradox.Graphics.Tests
{

    #line 8
    internal static partial class ShaderMixins
    {
        internal partial class CustomEffect  : IShaderMixinBuilderExtended
        {
            public void Generate(ShaderMixinSourceTree mixin, ShaderMixinContext context)
            {

                #line 12
                if (context.GetParam(CustomShaderKeys.SwitchEffectLevel) < 10)
                {

                    #line 14
                    context.Mixin(mixin, "CustomShader");
                }

                #line 17
                else
                {

                    #line 18
                    context.Mixin(mixin, "CustomShader");
                }
            }
            private readonly ParameterKey[] __keys__ = new ParameterKey[]
            {
                CustomShaderKeys.SwitchEffectLevel,
            };
            public ParameterKey[] Keys
            {
                get
                {
                    return __keys__;
                }
            }
            private readonly string[] __mixins__ = new string[]
            {
                "CustomShader",
            };
            public string[] Mixins
            {
                get
                {
                    return __mixins__;
                }
            }

            [ModuleInitializer]
            internal static void __Initialize__()

            {
                ShaderMixinManager.Register("CustomEffect", new CustomEffect());
            }
        }
    }
}
