// Copyright (c) 2014 Silicon Studio Corp. (http://siliconstudio.co.jp)
// This file is distributed under GPL v3. See LICENSE.md for details.

namespace SiliconStudio.Paradox.Effects.Images
{
    /// <summary>
    /// A shader performing Lambertian pre-filtering.
    /// </summary>
    internal class CopyInputShader : ImageEffectShader, Texturing
    {    
        // Shading of the sprite
        stage override void PSMain()
        {
            float4 ColorTargets[6];

            var uv = (streams.ShadingPosition.xy + 0.125) / 256;
            for( uint i=0; i<6; ++i)
            {
                ColorTargets[i] = TextureCube0.Sample(Texturing.PointSampler, CubemapUtils.ConvertTexcoordsNoFlip(uv, i));
            }
            
            streams.ColorTarget = ColorTargets[0];
            streams.ColorTarget1 = ColorTargets[1];
            streams.ColorTarget2 = ColorTargets[2];
            streams.ColorTarget3 = ColorTargets[3];
            streams.ColorTarget4 = ColorTargets[4];
            streams.ColorTarget5 = ColorTargets[5];
        }
    };
}
