// <auto-generated>
// Do not edit this file yourself!
//
// This code was generated by Paradox Shader Mixin Code Generator.
// To generate it yourself, please install SiliconStudio.Paradox.VisualStudio.Package .vsix
// and re-save the associated .pdxfx.
// </auto-generated>

using SiliconStudio.Core;
using SiliconStudio.Paradox.Effects;
using SiliconStudio.Paradox.Shaders;
using SiliconStudio.Core.Mathematics;
using SiliconStudio.Paradox.Graphics;


#line 1 "C:\Projects\Paradox\sources\engine\SiliconStudio.Paradox.Graphics.Tests\Compiler\CubemapEffectMain.pdxfx"
using SiliconStudio.Paradox.Effects.Data;

#line 2
using SiliconStudio.Paradox.Effects.Modules;

#line 4
namespace Cubemap.Effects
{

    #line 6
    public partial class CubemapEffectMain  : IShaderMixinBuilder
    {
        public void Generate(ShaderMixinSourceTree mixin, ShaderMixinContext context)
        {

            #line 10
            context.Mixin(mixin, "ShaderBase");

            #line 11
            context.Mixin(mixin, "TransformationWAndVP");

            #line 12
            context.Mixin(mixin, "AlbedoFlatShading");

            #line 14
            if (context.GetParam(MaterialParameters.AlbedoDiffuse) != null)

                {

                    #line 15
                    var __subMixin = new ShaderMixinSourceTree() { Parent = mixin };

                    #line 15
                    context.Mixin(__subMixin, context.GetParam(MaterialParameters.AlbedoDiffuse));
                    mixin.Mixin.AddComposition("albedoDiffuse", __subMixin.Mixin);
                }

            #line 17
            else

                {

                    #line 17
                    var __subMixin = new ShaderMixinSourceTree() { Parent = mixin };

                    #line 17
                    context.Mixin(__subMixin, "ComputeColorTextureCubeReflect", TexturingKeys.TextureCube0);
                    mixin.Mixin.AddComposition("albedoDiffuse", __subMixin.Mixin);
                }
        }

        [ModuleInitializer]
        internal static void __Initialize__()

        {
            ShaderMixinManager.Register("CubemapEffectMain", new CubemapEffectMain());
        }
    }

    #line 20
    public partial class CubemapGeomEffect  : IShaderMixinBuilder
    {
        public void Generate(ShaderMixinSourceTree mixin, ShaderMixinContext context)
        {

            #line 24
            context.Mixin(mixin, "ShaderBase");

            #line 25
            context.Mixin(mixin, "TransformationWAndVP");

            #line 27
            mixin.Mixin.AddMacro("MAX_VERTEX_COUNT", 9);

            #line 28
            context.Mixin(mixin, "CameraCube");

            #line 30
            context.Mixin(mixin, "AlbedoFlatShading");

            #line 32
            if (context.GetParam(MaterialParameters.AlbedoDiffuse) != null)

                {

                    #line 33
                    var __subMixin = new ShaderMixinSourceTree() { Parent = mixin };

                    #line 33
                    context.Mixin(__subMixin, context.GetParam(MaterialParameters.AlbedoDiffuse));
                    mixin.Mixin.AddComposition("albedoDiffuse", __subMixin.Mixin);
                }
        }

        [ModuleInitializer]
        internal static void __Initialize__()

        {
            ShaderMixinManager.Register("CubemapGeomEffect", new CubemapGeomEffect());
        }
    }
}
