// <auto-generated>
// Do not edit this file yourself!
//
// This code was generated by Paradox Shader Mixin Code Generator.
// To generate it yourself, please install SiliconStudio.Paradox.VisualStudio.Package .vsix
// and re-save the associated .pdxfx.
// </auto-generated>

using SiliconStudio.Core;
using SiliconStudio.Paradox.Effects;
using SiliconStudio.Paradox.Shaders;
using SiliconStudio.Core.Mathematics;
using SiliconStudio.Paradox.Graphics;


#line 1 "C:\Projects\Paradox\sources\engine\SiliconStudio.Paradox.Shaders.Tests\GameAssets\Mixins\test_mixin_complex_params.pdxfx"
namespace Test
{

    #line 3
    public partial class SubParameters : ShaderMixinParameters
    {

        #line 5
        public static readonly ParameterKey<bool> param1 = ParameterKeys.New<bool>();

        #line 6
        public static readonly ParameterKey<int> param2 = ParameterKeys.New<int>(1);

        #line 7
    };

    #line 10
    public partial class TestParameters : ShaderMixinParameters
    {

        #line 12
        public static readonly ParameterKey<SubParameters> subParam1 = ParameterKeys.New<SubParameters>();

        #line 13
        public static readonly ParameterKey<SubParameters[]> subParameters = ParameterKeys.New<SubParameters[]>();
    };

    #line 16
    public partial class DefaultComplexParams  : IShaderMixinBuilder
    {
        public void Generate(ShaderMixinSourceTree mixin, ShaderMixinContext context)
        {

            #line 21
            context.Mixin(mixin, "A");

            #line 22
            context.Mixin(mixin, "B");

            #line 23
            context.Mixin(mixin, "C");

            #line 25
            int x = 1;

            #line 26
            foreach(var ____1 in context.GetParam(TestParameters.subParameters))

            {

                #line 26
                context.PushParameters(____1);

                #line 28
                if (context.GetParam(SubParameters.param1))
                {

                    #line 30
                    context.Mixin(mixin, "C" + x);
                }

                #line 33
                x++;

                #line 26
                context.PopParameters();
            }

            {

                #line 36
                context.PushParameters(context.GetParam(TestParameters.subParam1));

                #line 39
                if (context.GetParam(SubParameters.param2) == 1)
                {

                    #line 41
                    context.Mixin(mixin, "D");
                }

                #line 36
                context.PopParameters();
            }
        }

        [ModuleInitializer]
        internal static void __Initialize__()

        {
            ShaderMixinManager.Register("DefaultComplexParams", new DefaultComplexParams());
        }
    }
}
