// <auto-generated>
// Do not edit this file yourself!
//
// This code was generated by Paradox Shader Mixin Code Generator.
// To generate it yourself, please install SiliconStudio.Paradox.VisualStudio.Package .vsix
// and re-save the associated .pdxfx.
// </auto-generated>

using SiliconStudio.Core;
using SiliconStudio.Paradox.Effects;
using SiliconStudio.Paradox.Shaders;
using SiliconStudio.Core.Mathematics;
using SiliconStudio.Paradox.Graphics;


#line 1 "C:\Projects\Paradox\sources\engine\SiliconStudio.Paradox.Shaders.Tests\GameAssets\Mixins\test_mixin_simple_params.pdxfx"
namespace Test
{

    #line 3
    public partial class TestParameters : ShaderMixinParameters
    {

        #line 5
        public static readonly ParameterKey<bool> param1 = ParameterKeys.New<bool>();

        #line 6
        public static readonly ParameterKey<int> param2 = ParameterKeys.New<int>(1);

        #line 7
        public static readonly ParameterKey<string> param3 = ParameterKeys.New<string>("ok");
    };

    #line 10
    public partial class DefaultSimpleParams  : IShaderMixinBuilder
    {
        public void Generate(ShaderMixinSourceTree mixin, ShaderMixinContext context)
        {

            #line 14
            context.Mixin(mixin, "A");

            #line 15
            context.Mixin(mixin, "B");

            #line 18
            if (context.GetParam(TestParameters.param1))
            {

                #line 21
                context.Mixin(mixin, "C");

                #line 24
                mixin.Mixin.AddMacro("param2", context.GetParam(TestParameters.param2));

                {

                    #line 27
                    var __subMixin = new ShaderMixinSourceTree() { Parent = mixin };

                    #line 27
                    context.Mixin(__subMixin, "X");
                    mixin.Mixin.AddComposition("x", __subMixin.Mixin);
                }
            }

            #line 30
            else
            {

                #line 31
                context.Mixin(mixin, "D");

                #line 32
                mixin.Mixin.AddMacro("Test", context.GetParam(TestParameters.param3));

                {

                    #line 33
                    var __subMixin = new ShaderMixinSourceTree() { Parent = mixin };

                    #line 33
                    context.Mixin(__subMixin, "Y");
                    mixin.Mixin.AddComposition("y", __subMixin.Mixin);
                }
            }
        }

        [ModuleInitializer]
        internal static void __Initialize__()

        {
            ShaderMixinManager.Register("DefaultSimpleParams", new DefaultSimpleParams());
        }
    }
}
