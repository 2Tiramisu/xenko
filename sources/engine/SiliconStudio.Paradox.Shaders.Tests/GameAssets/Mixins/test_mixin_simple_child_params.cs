// <auto-generated>
// Do not edit this file yourself!
//
// This code was generated by Paradox Shader Mixin Code Generator.
// To generate it yourself, please install SiliconStudio.Paradox.VisualStudio.Package .vsix
// and re-save the associated .pdxfx.
// </auto-generated>

using SiliconStudio.Core;
using SiliconStudio.Paradox.Effects;
using SiliconStudio.Paradox.Shaders;
using SiliconStudio.Core.Mathematics;
using SiliconStudio.Paradox.Graphics;


#line 1 "C:\Projects\Paradox\sources\engine\SiliconStudio.Paradox.Shaders.Tests\GameAssets\Mixins\test_mixin_simple_child_params.pdxfx"
namespace Test
{
    [DataContract]
#line 3
    public partial class TestParameters : ShaderMixinParameters
    {

        #line 5
        public static readonly ParameterKey<int> TestCount = ParameterKeys.New<int>();
    };

    #line 8
    public partial class ChildParamsMixin  : IShaderMixinBuilder
    {
        public void Generate(ShaderMixinSourceTree mixin, ShaderMixinContext context)
        {

            #line 12
            context.CloneProperties();

            #line 12
            mixin.Mixin.CloneFrom(mixin.Parent.Mixin);

            #line 13
            context.SetParam(TestParameters.TestCount, 1);

            #line 14
            if (context.GetParam(TestParameters.TestCount) == 1)

                #line 15
                context.Mixin(mixin, "C1");
        }

        [ModuleInitializer]
        internal static void __Initialize__()

        {
            ShaderMixinManager.Register("ChildParamsMixin", new ChildParamsMixin());
        }
    }

    #line 18
    public partial class DefaultSimpleChildParams  : IShaderMixinBuilder
    {
        public void Generate(ShaderMixinSourceTree mixin, ShaderMixinContext context)
        {

            #line 22
            context.Mixin(mixin, "A");

            #line 23
            if (context.GetParam(TestParameters.TestCount) == 0)

                #line 24
                context.Mixin(mixin, "B");

            {

                #line 26
                var __subMixin = new ShaderMixinSourceTree() { Name = "ChildParamsMixin", Parent = mixin };
                mixin.Children.Add(__subMixin);

                #line 26
                context.BeginChild(__subMixin);

                #line 26
                context.Mixin(__subMixin, "ChildParamsMixin");

                #line 26
                context.EndChild();
            }

            #line 28
            if (context.GetParam(TestParameters.TestCount) == 0)

                #line 29
                context.Mixin(mixin, "C");
        }

        [ModuleInitializer]
        internal static void __Initialize__()

        {
            ShaderMixinManager.Register("DefaultSimpleChildParams", new DefaultSimpleChildParams());
        }
    }
}
