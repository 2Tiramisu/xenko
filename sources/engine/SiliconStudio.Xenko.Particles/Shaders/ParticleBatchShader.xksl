// Copyright (c) 2014 Silicon Studio Corp. (http://siliconstudio.co.jp)
// This file is distributed under GPL v3. See LICENSE.md for details.
class ParticleBatchShader<bool TSRgb, bool THasTexture> : ParticleBase
{
    // -------------------------------------
    // streams
    // -------------------------------------
    stage stream float4 Color : COLOR;
   // stage stream float Swizzle : BATCH_SWIZZLE;

    // -------------------------------------
    // VertexShader
    // -------------------------------------
    stage override void VSMain()
    {
        base.VSMain();
        if (TSRgb)
        {
            streams.Color = ColorUtility.ToLinear(streams.Color);
        }
    }

    // Shading of the sprite
    stage override float4 Shading()
    {
        float4 finalColor = ColorScale;
        if (THasTexture)
        {
            finalColor *= ((RenderFlagSwizzle == 0) ? SampleTex0() : SampleTex0().rrrr);
        }

        finalColor.rgb *= ColorIntensity;
        finalColor.a   *= AlphaAdditive;

        return finalColor;
    }

    stage float4 SampleTex0()
    {
        return Texture0.Sample(Sampler, streams.TexCoord);
    }
};
