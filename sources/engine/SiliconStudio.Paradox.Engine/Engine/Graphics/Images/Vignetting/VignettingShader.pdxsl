// Copyright (c) 2014 Silicon Studio Corp. (http://siliconstudio.co.jp)
// This file is distributed under GPL v3. See LICENSE.md for details.

namespace SiliconStudio.Paradox.Effects.Images
{
    /// <summary>
    /// Vignetting shader. 
    /// </summary>
    internal class VignettingShader : ImageEffectShader
    {
        // Amount
        stage float Amount;

        // At which radius from the center the vignetting begins, in [0, 1]
        stage float RadiusBegin;

        // Color othe vignette
        [Color]
        stage float3 Color;

        stage override float4 Shading()
        {
            float4 tapColor = Texture0.Sample(LinearSampler, streams.TexCoord).rgba;

            float2 fromCenterVector = streams.TexCoord - float2(0.5, 0.5);
            float squareDistanceToCenter = dot(fromCenterVector, fromCenterVector);
            float distanceToCenter = sqrt(squareDistanceToCenter);

            float vignette = smoothstep(RadiusBegin, 1.0, distanceToCenter / 0.7071); // 0.7071 is srqt(0.5), at the screen angle
            vignette *= Amount;
            tapColor.rgb = tapColor.rgb * (1.0 - vignette) + vignette * Color;

            return tapColor;
            
        }
    };
}