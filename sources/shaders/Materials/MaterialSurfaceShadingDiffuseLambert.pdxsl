// Copyright (c) 2014 Silicon Studio Corp. (http://siliconstudio.co.jp)
// This file is distributed under GPL v3. See LICENSE.md for details.
namespace SiliconStudio.Paradox.Effects.Materials
{
    /// <summary>
    /// Performs a Lambert shading
    /// </summary>
    class MaterialSurfaceShadingDiffuseLambert<bool TIsEnergyConservative> : IMaterialSurfaceShading
    {
        override float3 Shading()
        {
            // TODO: check if we need only matCavityDiffuse integrated
            var diffuseColor = streams.matDiffuse * streams.matCavity * streams.matCavityDiffuse;
            if (TIsEnergyConservative)
            {
                // Approximation see: http://research.tri-ace.com/Data/course_note_practical_implementation_at_triace.pdf
                diffuseColor *= (1 - streams.matSpecular);
            }
            return diffuseColor * streams.lightColorNdotL;
        }
    };
}