// Copyright (c) 2014 Silicon Studio Corp. (http://siliconstudio.co.jp)
// This file is distributed under GPL v3. See LICENSE.md for details.
namespace SiliconStudio.Paradox.Effects.Materials
{
    /// <summary>
    /// Performs a Microfacet shading
    /// </summary>
    class MaterialSurfaceShadingSpecularMicrofacet : IMaterialSurfaceShading, MaterialShadingStream, Math
    {
        compose IMaterialSpecularMicrofacetFresnelFunction fresnelFunction;

        compose IMaterialSpecularMicrofacetGeometricShadowingFunction geometricShadowingFunction;

        compose IMaterialSpecularMicrofacetNormalDistributionFunction normalDistributionFunction;

        override float3 Shading()
        {
            var specularColor = streams.matSpecular * streams.matCavity * streams.matCavitySpecular;

            var fresnel = fresnelFunction.Compute(specularColor);
            var geometricShadowing = geometricShadowingFunction.Compute();
            var normalDistribution = normalDistributionFunction.Compute();

            var brdf = fresnel * geometricShadowing * normalDistribution 
                       / ( 4 * streams.NdotL * streams.NdotV);

            return brdf * streams.lightColorNdotL;
        }
    };
}