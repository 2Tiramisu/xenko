// Copyright (c) 2014 Silicon Studio Corp. (http://siliconstudio.co.jp)
// This file is distributed under GPL v3. See LICENSE.md for details.
namespace SiliconStudio.Paradox.Effects.Lights
{
    /// <summary>
    /// Defines a group of directional lights
    /// </summary>
    internal class LightDirectionalGroup<int TMaxLightCount> : LightGroup, NormalStream
    {
        cbuffer PerPass
        {
            float3 LightDirectionsVS[TMaxLightCount] = null;
            float3 LightColor[TMaxLightCount] = null;
        }

        override int GetMaxLightCount()
        {
            return TMaxLightCount;
        }

        /// <summary>
        /// Compute the light color/direction for the specified index within this group
        /// </summary>
        override void ComputeLight(int lightIndex)
        {
            streams.lightColor = LightColor[lightIndex];
            // TODO: Add support for disk based Directional light
            streams.lightDirectionVS = -normalize(LightDirectionsVS[lightIndex]);

            // Base will compute shadow and Color with NdotL
            base.ComputeLight(lightIndex);
        }
    };
}