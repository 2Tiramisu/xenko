// Copyright (c) 2014 Silicon Studio Corp. (http://siliconstudio.co.jp)
// This file is distributed under GPL v3. See LICENSE.md for details.
/// <summary>
/// Renders the geometry in the correct view for a cube map.
/// </summary>
class CameraCube : PositionStream4, ShaderBase
{
    float3 CameraWorldPosition;

    float4x4 CameraViewProjectionMatrices[6];

    stream uint RTAIndex : SV_RenderTargetArrayIndex;

    // flip render
    [maxvertexcount(18)]
    stage void GSMain(triangle Input input[3], inout TriangleStream<Output> triangleStream)
    {
        // TODO: verify that for OpenGL. This is likely to be wrong
        for (int i = 0; i < 6; ++i)
        {
            streams.RTAIndex = i;
            
            for (int j = 2; j >= 0; --j)
            {
                streams = input[j];
                streams.ShadingPosition = mul(streams.PositionWS, CameraViewProjectionMatrices[i]);
                streams.ShadingPosition.x = -streams.ShadingPosition.x;
                triangleStream.Append(streams);
            }
            
            triangleStream.RestartStrip();
        }
    }
};