// Copyright (c) 2014 Silicon Studio Corp. (http://siliconstudio.co.jp)
// This file is distributed under GPL v3. See LICENSE.md for details.

namespace SiliconStudio.Paradox.Effects.Images
{
    /// <summary>
    /// Base class to perform post effects. Draws the input mesh without transformation.
    /// </summary>
    class SkyboxShader : ImageEffectShader, Transformation, SkyboxStream
    {
        // compose ComputeColor skyboxColor;

        override stage void VSMain()
        {
            base.VSMain();
            var position = float4(streams.TexCoord.x * 2 - 1, 1 - streams.TexCoord.y * 2, 1.0, 1.0f);
            var directionVS = mul(position, ProjectionInverse).xyz;
            var directionWS = mul(directionVS, (float3x3)ViewInverse);
            streams.skyboxViewDirection = directionWS;
        }

        override stage float4 Shading()
        {
            var samplingDir = streams.skyboxViewDirection;
            var color = TextureCube0.Sample(Texturing.LinearSampler, float3(samplingDir.x, samplingDir.y, -samplingDir.z));
            return color;
        }
    };
}
