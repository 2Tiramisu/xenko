// <auto-generated>
// Do not edit this file yourself!
//
// This code was generated by Paradox Shader Mixin Code Generator.
// To generate it yourself, please install SiliconStudio.Paradox.VisualStudio.Package .vsix
// and re-save the associated .pdxfx.
// </auto-generated>

using System;
using SiliconStudio.Core;
using SiliconStudio.Paradox.Effects;
using SiliconStudio.Paradox.Graphics;
using SiliconStudio.Paradox.Shaders;
using SiliconStudio.Core.Mathematics;
using Buffer = SiliconStudio.Paradox.Graphics.Buffer;

namespace SiliconStudio.Paradox.Effects.Images
{
    internal static partial class ShaderMixins
    {
        internal partial class GaussianBlurEffect  : IShaderMixinBuilder
        {
            public void Generate(ShaderMixinSourceTree mixin, ShaderMixinContext context)
            {
                var blur = GaussianUtil.GetBlurMacros(context.GetParam(GaussianBlurKeys.Radius), context.GetParam(GaussianBlurKeys.SigmaRatio));
                mixin.Mixin.AddMacro("BLUR_COUNT", blur.Count);
                mixin.Mixin.AddMacro("BLUR_OFFSETS", blur.Offsets);
                mixin.Mixin.AddMacro("BLUR_WEIGHTS", blur.Weights);
                mixin.Mixin.AddMacro("BLUR_DIRECTION", context.GetParam(GaussianBlurKeys.VerticalBlur) ? "float2(0,1)" : "float2(1,0)");
                context.Mixin(mixin, "GaussianBlurShader");
            }

            [ModuleInitializer]
            internal static void __Initialize__()

            {
                ShaderMixinManager.Register("GaussianBlurEffect", new GaussianBlurEffect());
            }
        }
    }
}
