// Copyright (c) 2014 Silicon Studio Corp. (http://siliconstudio.co.jp)
// This file is distributed under GPL v3. See LICENSE.md for details.

namespace SiliconStudio.Paradox.Effects.Images
{
    /// <summary>
    /// The Reinhard tonemap operator.
    /// </summary>
    internal class ToneMapReinhardOperator<bool UseModified> : ToneMapOperatorShader
    {
        stage float LuminanceSaturation;
        stage float WhiteLevel; // Only valid when UseModified == true

        float3 Compute(float3 color)
        {
	        float pixelLuminance = LuminanceUtils.Luma(color);    
	        float toneMappedLuminance;
            if (UseModified)
            {
                toneMappedLuminance = pixelLuminance / (pixelLuminance + 1);
            }
            else
            {
                toneMappedLuminance = pixelLuminance * (1.0f + pixelLuminance / (WhiteLevel * WhiteLevel)) / (1.0f + pixelLuminance);
            } 
	        return toneMappedLuminance * pow(color / pixelLuminance, LuminanceSaturation);    
        }
    };
}
