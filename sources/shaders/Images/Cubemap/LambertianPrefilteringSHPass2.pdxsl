// Copyright (c) 2014 Silicon Studio Corp. (http://siliconstudio.co.jp)
// This file is distributed under GPL v3. See LICENSE.md for details.

namespace SiliconStudio.Paradox.Effects.Images
{
    /// <summary>
    /// A shader performing Lambertian pre-filtering.
    /// </summary>
    internal class LambertianPrefilteringSHPass2 : SphericalHarmonicsBase, ImageEffectShader, Texturing, Math
    {    
        stage int2 SamplesCounts;

        // Shading of the sprite
        stage override void PSMain()
        {
            float4 coefficients;
            var inputTextureSize = SamplesCounts * HarmonicsOrder;

            for( uint v=0; v<SamplesCounts.y; ++v)
            {
                for( uint h=0; h<SamplesCounts.x; ++h)
                {
                    var samplingCoords = (streams.ShadingPosition.xy * SamplesCounts + float2(h,v)) / inputTextureSize;
                    coefficients  += Texture0.Sample(Texturing.PointSampler, samplingCoords);
                }
            }

            streams.ColorTarget = float4(4f * PI * coefficients.xyz / coefficients.w, 1);
        }
    };
}
