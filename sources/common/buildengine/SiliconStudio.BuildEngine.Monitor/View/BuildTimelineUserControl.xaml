<UserControl x:Class="SiliconStudio.BuildEngine.Monitor.View.BuildTimelineUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:uifx="http://schemas.dynamicnetworkadapter.com/dna/aurora/2009"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:local="clr-namespace:SiliconStudio.BuildEngine.Monitor.View"
             xmlns:vm="clr-namespace:SiliconStudio.BuildEngine.Monitor.ViewModel"
             xmlns:bts="clr-namespace:SiliconStudio.BuildEngine;assembly=SiliconStudio.BuildEngine.Common"
             xmlns:pdxui="clr-namespace:SiliconStudio.Presentation.Controls;assembly=SiliconStudio.Presentation"
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="800" Background="{DynamicResource ControlBackgroundBrush}">
    <UserControl.Resources>
        <Style x:Key="BaseTimelineItemStyle" TargetType="{x:Type uifx:TimelineItem}">
            <Setter Property="uifx:TimelinePanel.StartDate" Value="{Binding Path=Start}"/>
            <Setter Property="uifx:TimelinePanel.EndDate" Value="{Binding Path=End}"/>
            <Setter Property="IsCollapsed" Value="false" />
        </Style>

        <local:FirstValueIfNextValueEqualsConverter x:Key="FirstValueIfNextValueEqualsConverter" />

        <LinearGradientBrush x:Key="InProgressBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0.1" Color="Silver" />
            <GradientStop Offset="0.4" Color="Gainsboro" />
            <GradientStop Offset="0.6" Color="Gainsboro" />
            <GradientStop Offset="0.9" Color="Silver" />
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="SuccessfulBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0.1" Color="LimeGreen" />
            <GradientStop Offset="0.4" Color="LightGreen" />
            <GradientStop Offset="0.6" Color="LightGreen" />
            <GradientStop Offset="0.9" Color="LimeGreen" />
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="FailedBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0.1" Color="Crimson" />
            <GradientStop Offset="0.4" Color="LightCoral" />
            <GradientStop Offset="0.6" Color="LightCoral" />
            <GradientStop Offset="0.9" Color="Crimson" />
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="HighlightedBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0.1" Color="DarkOrange" />
            <GradientStop Offset="0.4" Color="Gold" />
            <GradientStop Offset="0.6" Color="Gold" />
            <GradientStop Offset="0.9" Color="DarkOrange" />
        </LinearGradientBrush>

        <SolidColorBrush x:Key="SelectedBorderBrush" Color="WhiteSmoke" />
        <SolidColorBrush x:Key="SelectedInProgressBrush" Color="Gainsboro" />
        <SolidColorBrush x:Key="SelectedSuccessfulBrush" Color="LightGreen" />
        <SolidColorBrush x:Key="SelectedFailedBrush" Color="LightCoral" />


        <!--<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0.1" Color="SteelBlue" />
            <GradientStop Offset="0.4" Color="SkyBlue" />
            <GradientStop Offset="0.6" Color="SkyBlue" />
            <GradientStop Offset="0.9" Color="SteelBlue" />
        </LinearGradientBrush>-->

        <DataTemplate x:Key="JobLengthZeroTemplate" DataType="{x:Type vm:MicrothreadJobViewModel}">
            <Border Name="border" Width="1" MouseEnter="MicrothreadJobViewModel_OnMouseEnter"
                    MouseLeave="MicrothreadJobViewModel_OnMouseLeave" BorderThickness="0"  />
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding IsHighlighted}" Value="True">
                    <Setter Property="Background" TargetName="border" Value="DarkOrange" />
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>
        
        <Style x:Key="{x:Type vm:MicrothreadJobViewModel}" TargetType="{x:Type uifx:TimelineItem}"
               BasedOn="{StaticResource BaseTimelineItemStyle}">
            <Setter Property="uifx:TimelinePanel.RowIndex" Value="{Binding Path=ThreadId}" />
            <Style.Triggers>
                <Trigger Property="IsDisplayAsZero" Value="True">
                    <Setter Property="ContentTemplate" Value="{StaticResource JobLengthZeroTemplate}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <DataTemplate DataType="{x:Type vm:MicrothreadJobViewModel}" >
            <Border Name="border" BorderBrush="Black" BorderThickness="1" SnapsToDevicePixels="True" 
                    ToolTipService.InitialShowDelay="0" ToolTipService.BetweenShowDelay="0" ToolTipService.ShowDuration="1000000000"
                    MouseEnter="MicrothreadJobViewModel_OnMouseEnter" MouseLeave="MicrothreadJobViewModel_OnMouseLeave">
                <i:Interaction.Behaviors>
                    <local:SelectedBuildStepBehavior BuildSession="{Binding Path=DataContext, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:BuildTimelineUserControl}}}" ExecutionId="{Binding MicrothreadId}" />
                </i:Interaction.Behaviors>
                <Border.ToolTip>
                    <ToolTip MaxWidth="350" StaysOpen="True">
                        <StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Status: " />
                                <TextBlock x:Name="StatusTextBlock" Text="{Binding Status, Converter={local:ResultStatusToString}}" FontWeight="Bold" />
                            </StackPanel>
                            <TextBlock Text="Description:" />
                            <TextBlock Text="{Binding Description}" TextWrapping="Wrap"/>
                        </StackPanel>
                    </ToolTip>
                </Border.ToolTip>
            </Border>
            
            <DataTemplate.Triggers>
                <!-- First level: build step status -->
                <DataTrigger Binding="{Binding Status}" Value="{x:Static bts:ResultStatus.NotProcessed}">
                    <Setter Property="Background" TargetName="border" Value ="{StaticResource InProgressBrush}" />
                </DataTrigger>

                <DataTrigger Binding="{Binding IsSuccessful}" Value="True">
                    <Setter Property="Background" TargetName="border" Value ="{StaticResource SuccessfulBrush}" />
                    <Setter Property="Foreground" TargetName="StatusTextBlock" Value="LimeGreen" />
                </DataTrigger>

                <DataTrigger Binding="{Binding HasFailed}" Value="True">
                    <Setter Property="Background" TargetName="border" Value ="{StaticResource FailedBrush}" />
                    <Setter Property="Foreground" TargetName="StatusTextBlock" Value="Crimson" />
                </DataTrigger>

                <!-- Second level: highlighted microthread -->
                <DataTrigger Binding="{Binding IsHighlighted}" Value="True">
                    <Setter Property="Background" TargetName="border" Value ="{StaticResource HighlightedBrush}" />
                </DataTrigger>

                <!-- Third level: selected microthread -->
                <DataTrigger Value="True">
                    <DataTrigger.Binding>
                        <MultiBinding Converter="{StaticResource FirstValueIfNextValueEqualsConverter}">
                            <Binding Path="IsSuccessful" />
                            <Binding Path="MicrothreadId" />
                            <Binding Path="DataContext.SelectedId" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type local:BuildTimelineUserControl}}" />
                        </MultiBinding>
                    </DataTrigger.Binding>
                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource SelectedBorderBrush}" />
                    <Setter Property="Background" TargetName="border" Value="{StaticResource SelectedSuccessfulBrush}" />
                </DataTrigger>

                <DataTrigger Value="True">
                    <DataTrigger.Binding>
                        <MultiBinding Converter="{StaticResource FirstValueIfNextValueEqualsConverter}">
                            <Binding Path="HasFailed" />
                            <Binding Path="MicrothreadId" />
                            <Binding Path="DataContext.SelectedId" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type local:BuildTimelineUserControl}}" />
                        </MultiBinding>
                    </DataTrigger.Binding>
                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource SelectedBorderBrush}" />
                    <Setter Property="Background" TargetName="border" Value="{StaticResource SelectedFailedBrush}" />
                </DataTrigger>
                
                <DataTrigger Value="{x:Static bts:ResultStatus.NotProcessed}">
                    <DataTrigger.Binding>
                        <MultiBinding Converter="{StaticResource FirstValueIfNextValueEqualsConverter}">
                            <Binding Path="Status" />
                            <Binding Path="MicrothreadId" />
                            <Binding Path="DataContext.SelectedId" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type local:BuildTimelineUserControl}}" />
                        </MultiBinding>
                    </DataTrigger.Binding>
                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource SelectedBorderBrush}" />
                    <Setter Property="Background" TargetName="border" Value="{StaticResource SelectedInProgressBrush}" />
                </DataTrigger>
                
            </DataTemplate.Triggers>
        </DataTemplate>
        
    </UserControl.Resources>


    <Grid Margin="5">
        <Grid.RowDefinitions>
            <RowDefinition Height="30" />
            <RowDefinition Height="25" />
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="100"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <StackPanel Orientation="Vertical" Grid.Row="2" Grid.Column="0">
            <TextBlock Text="Thread 1" Height="20" Margin="4,0"/>
            <TextBlock Text="Thread 2" Height="20" Margin="4,0" />
            <TextBlock Text="Thread 3" Height="20" Margin="4,0" />
            <TextBlock Text="Thread 4" Height="20" Margin="4,0" />
            <TextBlock Text="Thread 5" Height="20" Margin="4,0" />
            <TextBlock Text="Thread 6" Height="20" Margin="4,0" />
            <TextBlock Text="Thread 7" Height="20" Margin="4,0" />
            <TextBlock Text="Thread 8" Height="20" Margin="4,0" />
        </StackPanel>
        <DockPanel Grid.Row="0" Grid.Column="1" >
            <CheckBox Content="Auto-fit timeline" VerticalAlignment="Center" DockPanel.Dock="Left"
                      IsChecked="{Binding Path=AutoFitActive, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:BuildTimelineUserControl}}}"
                      />
            <Grid x:Name="SliderContainer">
                <Slider MaxWidth="600" Minimum="1" Maximum="100" Margin="48,0" VerticalAlignment="Center" HorizontalAlignment="Left" Width="{Binding Path=ActualWidth, ElementName=SliderContainer}">
                    <i:Interaction.Behaviors>
                        <local:ApplySliderValueToScaleBarBehavior
                        ScaleBar="{Binding ElementName=ScaleBar}"
                        IsAutoFitActive="{Binding Path=AutoFitActive, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:BuildTimelineUserControl}}}"
                        />
                    </i:Interaction.Behaviors>
                </Slider>
            </Grid>
        </DockPanel>

        <pdxui:ScaleBar x:Name="ScaleBar" Grid.Row="1" Grid.Column="1" PixelsPerTick="100" Margin="0,3" Foreground="WhiteSmoke"
                        IsZoomingOnMouseWheel="true" MinimumUnitsPerTick="0.00001" MaximumUnitsPerTick="86400"
                        >
            <pdxui:ScaleBar.LargeTickPen>
                <Pen Brush="WhiteSmoke" Thickness="2" />
            </pdxui:ScaleBar.LargeTickPen>
            <pdxui:ScaleBar.UnitSystem>
                <pdxui:UnitSystem Symbol="s">
                    <pdxui:UnitSystem.GroupingValues>
                        <pdxui:UnitGrouping LargeIntervalSize="1" SmallIntervalCount="10" />
                        <pdxui:UnitGrouping LargeIntervalSize="2" SmallIntervalCount="8" />
                        <pdxui:UnitGrouping LargeIntervalSize="5" SmallIntervalCount="10" />
                        <pdxui:UnitGrouping LargeIntervalSize="10" SmallIntervalCount="10" />
                        <pdxui:UnitGrouping LargeIntervalSize="15" SmallIntervalCount="5" />
                    </pdxui:UnitSystem.GroupingValues>
                    <pdxui:UnitSystem.Conversions>
                        <pdxui:UnitConversion Symbol="ms" Value="0.001" IsMultipliable="True" />
                        <pdxui:UnitConversion Symbol="µs" Value="0.000001" IsMultipliable="True" />
                        <pdxui:UnitConversion Symbol="min" Value="60">
                            <pdxui:UnitConversion.GroupingValues>
                                <pdxui:UnitGrouping LargeIntervalSize="1" SmallIntervalCount="10" />
                                <pdxui:UnitGrouping LargeIntervalSize="2" SmallIntervalCount="8" />
                                <pdxui:UnitGrouping LargeIntervalSize="5" SmallIntervalCount="10" />
                                <pdxui:UnitGrouping LargeIntervalSize="10" SmallIntervalCount="10" />
                                <pdxui:UnitGrouping LargeIntervalSize="15" SmallIntervalCount="5" />
                            </pdxui:UnitConversion.GroupingValues>
                        </pdxui:UnitConversion>
                        <pdxui:UnitConversion Symbol="H" Value="3600">
                            <pdxui:UnitConversion.GroupingValues>
                                <pdxui:UnitGrouping LargeIntervalSize="1" SmallIntervalCount="10" />
                                <pdxui:UnitGrouping LargeIntervalSize="2" SmallIntervalCount="8" />
                                <pdxui:UnitGrouping LargeIntervalSize="6" SmallIntervalCount="12" />
                                <pdxui:UnitGrouping LargeIntervalSize="12" SmallIntervalCount="12" />
                            </pdxui:UnitConversion.GroupingValues>
                        </pdxui:UnitConversion>
                        <pdxui:UnitConversion Symbol="d" Value="86400" IsMultipliable="True" />
                    </pdxui:UnitSystem.Conversions>
                </pdxui:UnitSystem>
            </pdxui:ScaleBar.UnitSystem>
            <i:Interaction.Behaviors>
                <local:LinkScaleBarAndTimelineControlBehavior TimelineControl="{Binding ElementName=TimelineControl}" />
                <local:AutofitTimelineBehavior
                        Active="{Binding Path=AutoFitActive, Mode=TwoWay,RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:BuildTimelineUserControl}}}"
                        MinimumDate="{Binding StartTime}" MaximumDate="{Binding EndTime}"
                        TickTimeSpan="{Binding ElementName=TimelineControl, Path=TickTimeSpan, Mode=OneWay}"
                        />
            </i:Interaction.Behaviors>
        </pdxui:ScaleBar>
            
        <uifx:TimelineControl x:Name="TimelineControl" Margin="0,0,0,0" Grid.Row="2"  Grid.Column="1"
            ItemsSource="{Binding Jobs}" MinimumDate="{Binding StartTime, Mode=OneWay}" MaximumDate="{Binding EndTime, Mode=OneWay}"
            PreviewMouseWheel="TimelineControlPreviewMouseWheel" ScrollViewer.ScrollChanged="TimelineControl_OnScrollChanged">
            <uifx:TimelineControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <uifx:TimelineFastPanel RowHeight="18" RowVerticalMargin="2"/>
                </ItemsPanelTemplate>
            </uifx:TimelineControl.ItemsPanel>
            <i:Interaction.Behaviors>
                <local:SelectedBuildStepBehavior BuildSession="{Binding}" ExecutionId="-1" />
            </i:Interaction.Behaviors>
        </uifx:TimelineControl>
    </Grid>
</UserControl>
