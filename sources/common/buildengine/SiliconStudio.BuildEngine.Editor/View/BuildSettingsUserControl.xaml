<UserControl x:Class="SiliconStudio.BuildEngine.Editor.View.BuildSettingsUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:pdxui="clr-namespace:SiliconStudio.Presentation.Controls;assembly=SiliconStudio.Presentation"
             xmlns:local="clr-namespace:SiliconStudio.BuildEngine.Editor.View"
             xmlns:qm="clr-namespace:SiliconStudio.Quantum;assembly=SiliconStudio.Quantum"
             xmlns:vm="clr-namespace:SiliconStudio.BuildEngine.Editor.ViewModel"
             xmlns:cvt="clr-namespace:SiliconStudio.Presentation.ValueConverters;assembly=SiliconStudio.Presentation"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300" d:DataContext="{d:DesignInstance vm:BuildSettingsViewModel}">
    <UserControl.Resources>
        <cvt:CamelCaseTextFormatValueConverter x:Key="CamelCaseTextFormatValueConverter"/>
        <cvt:CollapsedVisibilityValueConverter x:Key="CollapsedVisibilityValueConverter"/>
        <cvt:EnumValuesConverter x:Key="EnumValuesConverter"/>
        <local:BoolToStringConverter x:Key="BoolToStringConverter"/>

        <DataTemplate x:Key="ExpanderTemplate">
            <Expander IsExpanded="True" Margin="0,3,0,3">
                <Expander.Header>
                    <TextBlock HorizontalAlignment="Left" Text="{Binding PropertyName, Converter={StaticResource CamelCaseTextFormatValueConverter}}" TextTrimming="CharacterEllipsis" ToolTipService.ToolTip="{Binding Text, RelativeSource={RelativeSource Mode=Self}}"/>
                </Expander.Header>
                    <StackPanel Orientation="Vertical">
                        <ItemsControl Margin="0" Padding="2" Background="Transparent" BorderThickness="0" ItemsSource="{Binding Children}" ItemTemplateSelector="{DynamicResource SettingsPropertyGridTemplateSelector}" Focusable="False"/>
                    </StackPanel>
            </Expander>
        </DataTemplate>

        <DataTemplate x:Key="ReadOnlyStringTemplate">
            <pdxui:DoublePaneContainer d:DataContext="{d:DesignInstance qm:IViewModelNode}">
                <pdxui:DoublePaneContainer.Header>
                    <TextBlock VerticalAlignment="Center" HorizontalAlignment="Left" Text="{Binding Name, Converter={StaticResource CamelCaseTextFormatValueConverter}}" TextTrimming="CharacterEllipsis" ToolTipService.ToolTip="{Binding Text, RelativeSource={RelativeSource Mode=Self}}"/>
                </pdxui:DoublePaneContainer.Header>
                <TextBox Margin="2" Style="{StaticResource PropertyGridTextBoxStyle}" IsReadOnly="True" Text="{Binding TValue, FallbackValue=Error}" />
            </pdxui:DoublePaneContainer>
        </DataTemplate>

        <DataTemplate x:Key="PathStringTemplate">
            <pdxui:DoublePaneContainer>
                <pdxui:DoublePaneContainer.Header>
                    <TextBlock VerticalAlignment="Center" HorizontalAlignment="Left" Text="{Binding PropertyName, Converter={StaticResource CamelCaseTextFormatValueConverter}}" TextTrimming="CharacterEllipsis" ToolTipService.ToolTip="{Binding Text, RelativeSource={RelativeSource Mode=Self}}"/>
                </pdxui:DoublePaneContainer.Header>
                <DockPanel>
                    <Button DockPanel.Dock="Right" Command="{Binding BrowseCommand.TValue}" Width="20" Height="20">
                        <Image Source="{StaticResource ImageBrowse}" />
                    </Button>
                    <Button DockPanel.Dock="Right" Command="{Binding ToggleRelativePathCommand.TValue}" Width="20" Height="20">
                        <Image Source="{StaticResource ImageRelativeFolder}" />
                    </Button>
                    <TextBox Margin="2" Style="{StaticResource PropertyGridTextBoxStyle}" Text="{Binding TValue, FallbackValue=Error}" />
                </DockPanel>
            </pdxui:DoublePaneContainer>
        </DataTemplate>

        <DataTemplate x:Key="ReadOnlyBoolTemplate">
            <Border Background="{StaticResource BackgroundBrush}" CornerRadius="3" Margin="0,2,0,2">
                <TextBlock Margin="2" HorizontalAlignment="Center" x:Name="textBlock">
                    <TextBlock.Text>
                        <MultiBinding Converter="{StaticResource BoolToStringConverter}">
                            <Binding Path="PropertyName" />
                            <Binding Path="TValue" />
                        </MultiBinding>
                    </TextBlock.Text>
                </TextBlock>
            </Border>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding TValue}" Value="false">
                    <Setter Property="Foreground" Value="Crimson" TargetName="textBlock"/>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <DataTemplate x:Key="CommandButtonTemplate">
            <Button Margin="0,2,0,2" Command="{Binding TValue}" Content="{Binding PropertyName, Converter={StaticResource CamelCaseTextFormatValueConverter}}"/>
        </DataTemplate>

        <DataTemplate x:Key="MetadataKeysListViewModel">
            <Expander IsExpanded="True" Margin="0,2,0,2">
                <Expander.Header>
                    <TextBlock HorizontalAlignment="Left" Text="{Binding PropertyName, Converter={StaticResource CamelCaseTextFormatValueConverter}}" TextTrimming="CharacterEllipsis" ToolTipService.ToolTip="{Binding Text, RelativeSource={RelativeSource Mode=Self}}"/>
                </Expander.Header>
                <Border Background="{StaticResource BackgroundBrush}"  BorderThickness="1">
                    <StackPanel Orientation="Vertical">
                        <ListBox Height="200"  Margin="0" Padding="2" Background="Transparent" BorderThickness="0" ItemsSource="{Binding Value}" ItemTemplateSelector="{DynamicResource SettingsPropertyGridTemplateSelector}" Focusable="False">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <DockPanel>
                                        <Button x:Name="DeleteButton" DockPanel.Dock="Left" Width="16" Height="16" HorizontalAlignment="Left" Command="{Binding DataContext.Remove.TValue, RelativeSource={RelativeSource AncestorType=ListBox}}" CommandParameter="{Binding Value.Key}">
                                            <Image Source="{DynamicResource ImageRemove}" />
                                        </Button>
                                        <TextBlock HorizontalAlignment="Stretch" Margin="4,0,0,0" Text="{Binding Value.Key}" Grid.Row="0" />
                                    </DockPanel>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                        <DockPanel Visibility="{Binding HasChildAdd, Converter={StaticResource CollapsedVisibilityValueConverter}}">
                            <Button DockPanel.Dock="Right" Margin="4,0,4,4" HorizontalAlignment="Right" Width="20" Height="20" Command="{Binding Add.TValue}">
                                <Image Source="{StaticResource ImageAdd}" />
                            </Button>
                            <ComboBox Margin="4,0,4,4" Width="120" DockPanel.Dock="Right" SelectedItem="{Binding NewKeyType.TValue}" ItemsSource="{Binding NewKeyType.Type, Converter={StaticResource EnumValuesConverter}}"/>
                            <TextBox Margin="4,0,4,4" Text="{Binding NewKeyName.TValue}"/>
                        </DockPanel>
                    </StackPanel>
                </Border>
            </Expander>
        </DataTemplate>

        <local:SettingsPropertyGridTemplateSelector x:Key="SettingsPropertyGridTemplateSelector"
                                                    ExpanderTemplate="{StaticResource ExpanderTemplate}"
                                                    ReadOnlyStringTemplate="{StaticResource ReadOnlyStringTemplate}"
                                                    PathStringTemplate="{StaticResource PathStringTemplate}"
                                                    ReadOnlyBoolTemplate="{StaticResource ReadOnlyBoolTemplate}"
                                                    ButtonTemplate="{StaticResource CommandButtonTemplate}"
                                                    MetadataKeyTemplate="{StaticResource MetadataKeysListViewModel}"
                                                    >      
        </local:SettingsPropertyGridTemplateSelector>

    </UserControl.Resources>
    <pdxui:PropertyGrid Padding="1,0,3,0" Margin="5" ItemsSource="{Binding SettingsRootNode.Children, FallbackValue={x:Null}}"
                        ItemTemplateSelector="{StaticResource SettingsPropertyGridTemplateSelector}" />
</UserControl>
