<Window x:Class="SiliconStudio.Presentation.SampleApp.SampleAppWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:sskk="http://schemas.siliconstudio.com/xaml/presentation"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:controls="clr-namespace:SiliconStudio.Presentation.Controls;assembly=SiliconStudio.Presentation.Quantum"
        Title="SiliconStudio Presentation Sample Application" Height="1024" Width="768" Background="{DynamicResource BackgroundBrush}"
        x:Name="Window">
    <!--        xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
xmlns:assetEditor="clr-namespace:SiliconStudio.Assets.Editor.View.Controls;assembly=SiliconStudio.Assets.Editor"-->

    <Window.Resources>
    </Window.Resources>

    <TabControl Margin="8">

        <!--<TabItem Header="EditableListBox">

            <StackPanel>
                <legacy:EditableListBox x:Name="EditableListBox" BorderThickness="1" BorderBrush="#FF606060" Margin="4">-->
                    <!--<i:Interaction.Behaviors>
                        <sskk:DropBehavior DataType="..." Command="..."/>
                    </i:Interaction.Behaviors>-->

                    <!--<sskk:EditableListBox.ItemTemplate>
                        <DataTemplate>
                            <Border BorderBrush="Yellow" BorderThickness="2" Background="Orange" CornerRadius="3" Width="150" Height="40">
                                <ContentControl Content="{Binding Content}"/>
                            </Border>
                        </DataTemplate>
                    </sskk:EditableListBox.ItemTemplate>-->

                    <!--<Button Content="Button 1" Margin="3" Padding="15,5,150,5"/>
                    <Button Content="Button 2" Margin="3" Padding="15,5,150,5"/>
                    <Button Content="Button 3" Margin="3" Padding="15,5,150,5"/>
                    <Button Content="Button 4" Margin="3" Padding="15,5,150,5"/>
                    <Button Content="Button 5" Margin="3" Padding="15,5,150,5"/>
                </legacy:EditableListBox>

                <legacy:EditableListBox x:Name="EditableListBox2" BorderThickness="1" BorderBrush="#FF606060" Margin="4">-->

                    <!--<sskk:EditableListBox.ItemTemplate>
                        <DataTemplate>
                            <Border BorderBrush="Yellow" BorderThickness="2" Background="Orange" CornerRadius="3" Width="150" Height="40">
                                <ContentControl Content="{Binding Content}"/>
                            </Border>
                        </DataTemplate>
                    </sskk:EditableListBox.ItemTemplate>-->

                    <!--<Button Content="Button 1" Margin="3" Padding="15,5,150,5"/>
                    <Button Content="Button 2" Margin="3" Padding="15,5,150,5"/>
                    <Button Content="Button 3" Margin="3" Padding="15,5,150,5"/>
                    <Button Content="Button 4" Margin="3" Padding="15,5,150,5"/>
                    <Button Content="Button 5" Margin="3" Padding="15,5,150,5"/>
                </legacy:EditableListBox>-->

                <!--<GroupBox Header="Drop Sources">
                    <WrapPanel>
                        <Button Content="Test Button 1" Margin="1" Padding="4">
                            <i:Interaction.Behaviors>
                                <legacy:DragBehavior DataType="EditableListBoxExternalDrop" DragData="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}"/>
                            </i:Interaction.Behaviors>
                        </Button>
                        <Button Content="Test Button 2" Margin="1" Padding="4">
                            <i:Interaction.Behaviors>
                                <legacy:DragBehavior DataType="EditableListBoxExternalDrop" DragData="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}"/>
                            </i:Interaction.Behaviors>
                        </Button>
                    </WrapPanel>
                </GroupBox>

            </StackPanel>
        </TabItem>-->

        <!--<TabItem Header="EditableTextBlock">
            <StackPanel>

                <StackPanel Orientation="Horizontal">
                    <legacy:EditableTextBlock x:Name="Txt1" Background="Red" Margin="4" MinWidth="150" MaxWidth="250" Text="Test en mousse" HorizontalAlignment="Left"/>
                    <ToggleButton Content="Edit" Margin="2" IsChecked="{Binding IsEditing, ElementName=Txt1}" IsThreeState="False"/>
                </StackPanel>

                <StackPanel Orientation="Horizontal">
                    <legacy:EditableTextBlock x:Name="Txt2" Background="Red" Margin="4" Text="Test en mousse" HorizontalAlignment="Right"/>
                    <ToggleButton Content="Edit" Margin="2" IsChecked="{Binding IsEditing, ElementName=Txt2}" IsThreeState="False"/>
                </StackPanel>

                <StackPanel Orientation="Horizontal">
                    <legacy:EditableTextBlock x:Name="Txt3" Background="Red" Margin="4" Text="Test en mousse" IsEditing="True"/>
                    <ToggleButton Content="Edit" Margin="2" IsChecked="{Binding IsEditing, ElementName=Txt3}" IsThreeState="False"/>
                </StackPanel>

            </StackPanel>
        </TabItem>-->

        <TabItem Header="TextBox" DataContext="{Binding TextBoxViewModel, RelativeSource={RelativeSource AncestorType=Window}}">
            <StackPanel>
                <sskk:TextBox x:Name="SskkTextBox" VerticalAlignment="Top" Margin="15" Text="{Binding Text}"
                                   WatermarkContent="Watermark" ValidateOnTextChange="{Binding ValidateOnTextChange, Mode=TwoWay}"
                                   ValidateWithEnter="{Binding ValidateWithEnter, Mode=TwoWay}" ValidateOnLostFocus="{Binding ValidateOnLostFocus, Mode=TwoWay}"
                                   CancelWithEscape="{Binding CancelWithEscape, Mode=TwoWay}" CancelOnLostFocus="{Binding CancelOnLostFocus, Mode=TwoWay}"
                                   ValidateCommand="{Binding ValidateCommand}" CancelCommand="{Binding CancelCommand}"/>
                
                <sskk:KeyValueGrid>
                    <TextBlock Text="Text: " VerticalAlignment="Center"/>
                    <TextBlock Text="{Binding Text}" VerticalAlignment="Center" Margin="2"/>

                    <TextBlock Text="SetText: " VerticalAlignment="Center"/>
                    <StackPanel Orientation="Horizontal">
                        <Button Content="= 'Hello'" Click="SetTextButtonClick" Tag="SskkTextBox|Text|Hello" HorizontalAlignment="Left" VerticalAlignment="Center" Padding="3" Margin="2"/>
                        <Button Content="(Clear)" Click="TextBoxClearTextButtonClick" HorizontalAlignment="Left" VerticalAlignment="Center" Padding="3" Margin="2"/>
                    </StackPanel>

                    <TextBlock Text="Validate: " VerticalAlignment="Center"/>
                    <StackPanel Orientation="Horizontal">
                        <Button Content="Trigger validation" Click="TextBoxValidateButtonClick" Tag="SskkTextBox" HorizontalAlignment="Left" VerticalAlignment="Center" Padding="3" Margin="2"/>
                        <Button Content="Trigger cancellation" Click="TextBoxCancelButtonClick" Tag="SskkTextBox" HorizontalAlignment="Left" VerticalAlignment="Center" Padding="3" Margin="2"/>
                    </StackPanel>

                    <TextBlock Text="ValidateWithEnter: " VerticalAlignment="Center"/>
                    <CheckBox IsChecked="{Binding ValidateWithEnter, Mode=TwoWay}" VerticalAlignment="Center" Margin="2"/>
                    
                    <TextBlock Text="ValidateOnTextChange: " VerticalAlignment="Center"/>
                    <CheckBox IsChecked="{Binding ValidateOnTextChange, Mode=TwoWay}" VerticalAlignment="Center" Margin="2"/>
                    
                    <TextBlock Text="ValidateOnLostFocus: " VerticalAlignment="Center"/>
                    <CheckBox IsChecked="{Binding ValidateOnLostFocus, Mode=TwoWay}" VerticalAlignment="Center" Margin="2"/>
                    
                    <TextBlock Text="CancelWithEscape: " VerticalAlignment="Center"/>
                    <CheckBox IsChecked="{Binding CancelWithEscape, Mode=TwoWay}" VerticalAlignment="Center" Margin="2"/>
                    
                    <TextBlock Text="CancelOnLostFocus: " VerticalAlignment="Center"/>
                    <CheckBox IsChecked="{Binding CancelOnLostFocus, Mode=TwoWay}" VerticalAlignment="Center" Margin="2"/>
                    
                    <TextBlock Text="Validation count: " VerticalAlignment="Center"/>
                    <TextBlock Text="{Binding ValidationCount, StringFormat=Validation count: {0}}" VerticalAlignment="Center" Margin="2"/>

                    <TextBlock Text="Cancellation count: " VerticalAlignment="Center"/>
                    <TextBlock Text="{Binding CancellationCount, StringFormat=Cancellation count: {0}}" VerticalAlignment="Center" Margin="2"/>

                    <TextBlock Text="Click here to lose focus" VerticalAlignment="Center"/>
                    <TextBox VerticalAlignment="Center" Margin="2"/>

                    <TextBlock Text="TextTrimming (Char/Begin)" VerticalAlignment="Center"/>
                    <sskk:TextBox VerticalAlignment="Center" Margin="2,2,200,2" TextTrimming="CharacterEllipsis" TrimmingSource="Begin" Text="aaaa bbbb cccc dddd eeee ffff gggg hhhh iiii jjjj kkkk llll mmmm nnnn oooo pppp qqqq rrrr ssss tttt uuuu vvvv wwww xxxx yyyy zzzz"/>
                    <TextBlock Text="TextTrimming (Char/Middle)" VerticalAlignment="Center"/>
                    <sskk:TextBox VerticalAlignment="Center" Margin="2,2,200,2" TextTrimming="CharacterEllipsis" TrimmingSource="Middle" Text="aaaa bbbb cccc dddd eeee ffff gggg hhhh iiii jjjj kkkk llll mmmm nnnn oooo pppp qqqq rrrr ssss tttt uuuu vvvv wwww xxxx yyyy zzzz"/>
                    <TextBlock Text="TextTrimming (Char/End)" VerticalAlignment="Center"/>
                    <sskk:TextBox VerticalAlignment="Center" Margin="2,2,200,2" TextTrimming="CharacterEllipsis" TrimmingSource="End" Text="aaaa bbbb cccc dddd eeee ffff gggg hhhh iiii jjjj kkkk llll mmmm nnnn oooo pppp qqqq rrrr ssss tttt uuuu vvvv wwww xxxx yyyy zzzz"/>
                    <TextBlock Text="TextTrimming (Word/end)" VerticalAlignment="Center"/>
                    <sskk:TextBox VerticalAlignment="Center" Margin="2,2,200,2" TextTrimming="WordEllipsis" TrimmingSource="Begin" Text="aaaa bbbb cccc dddd eeee ffff gggg hhhh iiii jjjj kkkk llll mmmm nnnn oooo pppp qqqq rrrr ssss tttt uuuu vvvv wwww xxxx yyyy zzzz"/>
                    <TextBlock Text="TextTrimming (Word/end)" VerticalAlignment="Center"/>
                    <sskk:TextBox VerticalAlignment="Center" Margin="2,2,200,2" TextTrimming="WordEllipsis" TrimmingSource="Middle" Text="aaaa bbbb cccc dddd eeee ffff gggg hhhh iiii jjjj kkkk llll mmmm nnnn oooo pppp qqqq rrrr ssss tttt uuuu vvvv wwww xxxx yyyy zzzz"/>
                    <TextBlock Text="TextTrimming (Word/end)" VerticalAlignment="Center"/>
                    <sskk:TextBox VerticalAlignment="Center" Margin="2,2,200,2" TextTrimming="WordEllipsis" TrimmingSource="End" Text="aaaa bbbb cccc dddd eeee ffff gggg hhhh iiii jjjj kkkk llll mmmm nnnn oooo pppp qqqq rrrr ssss tttt uuuu vvvv wwww xxxx yyyy zzzz"/>
                </sskk:KeyValueGrid>

            </StackPanel>
        </TabItem>

        <TabItem Header="TimerTextBox" DataContext="{Binding TimerTextBoxViewModel, RelativeSource={RelativeSource AncestorType=Window}}">
            <StackPanel>
                <sskk:TimerTextBox x:Name="TimerTextBox" VerticalAlignment="Top" Margin="15" Text="{Binding Text}" IsTimedValidationEnabled="{Binding IsTimedValidationEnabled}"
                                   WatermarkContent="Watermark" ValidateOnTextChange="{Binding ValidateOnTextChange, Mode=TwoWay}" ValidationDelay="{Binding ValidationDelay}"
                                   ValidateWithEnter="{Binding ValidateWithEnter, Mode=TwoWay}" ValidateOnLostFocus="{Binding ValidateOnLostFocus, Mode=TwoWay}"
                                   CancelWithEscape="{Binding CancelWithEscape, Mode=TwoWay}" CancelOnLostFocus="{Binding CancelOnLostFocus, Mode=TwoWay}"
                                   ValidateCommand="{Binding ValidateCommand}" CancelCommand="{Binding CancelCommand}"/>
                <sskk:KeyValueGrid>
                    <TextBlock Text="Text: " VerticalAlignment="Center"/>
                    <TextBlock Text="{Binding Text}" VerticalAlignment="Center" Margin="2"/>

                    <TextBlock Text="SetText: " VerticalAlignment="Center"/>
                    <StackPanel Orientation="Horizontal">
                        <Button Content="= '52'" Click="SetTextButtonClick" Tag="NumericTextBox|Text|52" HorizontalAlignment="Left" VerticalAlignment="Center" Padding="3" Margin="2"/>
                        <Button Content="= '52.7'" Click="SetTextButtonClick" Tag="TimerTextBox|Text|52.7" HorizontalAlignment="Left" VerticalAlignment="Center" Padding="3" Margin="2"/>
                        <Button Content="= 'Hello'" Click="SetTextButtonClick" Tag="TimerTextBox|Text|Hello" HorizontalAlignment="Left" VerticalAlignment="Center" Padding="3" Margin="2"/>
                    </StackPanel>
                    
                    <TextBlock Text="ValidationDelay: "/>
                    <sskk:SliderTextBox Value="{Binding ValidationDelay, Mode=TwoWay}" Minimum="-1" Maximum="3000" DisplayRangeIndicator="True"/>

                    <TextBlock Text="IsTimedValidationEnabled: "/>
                    <CheckBox IsChecked="{Binding IsTimedValidationEnabled, Mode=TwoWay}" Margin="2"/>

                    <TextBlock Text="Inherited from TextBox: "/>
                    <Separator Margin="20"/>

                    <TextBlock Text="Validate: " VerticalAlignment="Center"/>
                    <StackPanel Orientation="Horizontal">
                        <Button Content="Trigger validation" Click="TextBoxValidateButtonClick" Tag="TimerTextBox" HorizontalAlignment="Left" VerticalAlignment="Center" Padding="3" Margin="2"/>
                        <Button Content="Trigger cancellation" Click="TextBoxCancelButtonClick" Tag="TimerTextBox" HorizontalAlignment="Left" VerticalAlignment="Center" Padding="3" Margin="2"/>
                    </StackPanel>

                    <TextBlock Text="ValidateWithEnter: " VerticalAlignment="Center"/>
                    <CheckBox IsChecked="{Binding ValidateWithEnter, Mode=TwoWay}" VerticalAlignment="Center" Margin="2"/>

                    <TextBlock Text="ValidateOnTextChange: " VerticalAlignment="Center"/>
                    <CheckBox IsChecked="{Binding ValidateOnTextChange, Mode=TwoWay}" VerticalAlignment="Center" Margin="2"/>

                    <TextBlock Text="ValidateOnLostFocus: " VerticalAlignment="Center"/>
                    <CheckBox IsChecked="{Binding ValidateOnLostFocus, Mode=TwoWay}" VerticalAlignment="Center" Margin="2"/>

                    <TextBlock Text="CancelWithEscape: " VerticalAlignment="Center"/>
                    <CheckBox IsChecked="{Binding CancelWithEscape, Mode=TwoWay}" VerticalAlignment="Center" Margin="2"/>

                    <TextBlock Text="CancelOnLostFocus: " VerticalAlignment="Center"/>
                    <CheckBox IsChecked="{Binding CancelOnLostFocus, Mode=TwoWay}" VerticalAlignment="Center" Margin="2"/>

                    <TextBlock Text="Validation count: " VerticalAlignment="Center"/>
                    <TextBlock Text="{Binding ValidationCount, StringFormat=Validation count: {0}}" VerticalAlignment="Center" Margin="2"/>

                    <TextBlock Text="Cancellation count: " VerticalAlignment="Center"/>
                    <TextBlock Text="{Binding CancellationCount, StringFormat=Cancellation count: {0}}" VerticalAlignment="Center" Margin="2"/>

                    <TextBlock Text="Click here to lose focus" VerticalAlignment="Center"/>
                    <TextBox VerticalAlignment="Center" Margin="2"/>
                </sskk:KeyValueGrid>
            </StackPanel>
        </TabItem>
        
        <TabItem Header="NumericTextBox" DataContext="{Binding NumericTextBoxViewModel, RelativeSource={RelativeSource AncestorType=Window}}">
            <StackPanel>
                <sskk:NumericTextBox x:Name="NumericTextBox" VerticalAlignment="Top" Margin="15" Text="{Binding Text}" Value="{Binding Value}"
                                   WatermarkContent="Watermark" ValidateOnTextChange="{Binding ValidateOnTextChange, Mode=TwoWay}" DisplayUpDownButtons="{Binding DisplayUpDownButtons}"
                                   Minimum="{Binding Minimum, Mode=TwoWay}" Maximum="{Binding Maximum, Mode=TwoWay}" DecimalPlaces="{Binding DecimalPlaces, Mode=TwoWay}"
                                   ValidateWithEnter="{Binding ValidateWithEnter, Mode=TwoWay}" ValidateOnLostFocus="{Binding ValidateOnLostFocus, Mode=TwoWay}"
                                   CancelWithEscape="{Binding CancelWithEscape, Mode=TwoWay}" CancelOnLostFocus="{Binding CancelOnLostFocus, Mode=TwoWay}"
                                   ValidateCommand="{Binding ValidateCommand}" CancelCommand="{Binding CancelCommand}"/>
                <sskk:KeyValueGrid>
                    <TextBlock Text="Text: " VerticalAlignment="Center"/>
                    <TextBlock Text="{Binding Text}" VerticalAlignment="Center" Margin="2"/>

                    <TextBlock Text="Value: " VerticalAlignment="Center"/>
                    <TextBlock Text="{Binding Value}" VerticalAlignment="Center" Margin="2"/>

                    <TextBlock Text="Value: " VerticalAlignment="Center"/>
                    <Slider Minimum="{Binding Minimum}" Maximum="{Binding Maximum}" Value="{Binding Value}" Height="32"/>

                    <TextBlock Text="SetText: " VerticalAlignment="Center"/>
                    <StackPanel Orientation="Horizontal">
                        <Button Content="= '52'" Click="SetTextButtonClick" Tag="NumericTextBox|Text|52" HorizontalAlignment="Left" VerticalAlignment="Center" Padding="3" Margin="2"/>
                        <Button Content="= '52.7'" Click="SetTextButtonClick" Tag="NumericTextBox|Text|52.7" HorizontalAlignment="Left" VerticalAlignment="Center" Padding="3" Margin="2"/>
                        <Button Content="= 'Hello'" Click="SetTextButtonClick" Tag="NumericTextBox|Text|Hello" HorizontalAlignment="Left" VerticalAlignment="Center" Padding="3" Margin="2"/>
                    </StackPanel>

                    <TextBlock Text="SetValue: " VerticalAlignment="Center"/>
                    <StackPanel Orientation="Horizontal">
                        <Button Content="= 51" Click="SetTextButtonClick" Tag="NumericTextBox|Value|51" HorizontalAlignment="Left" VerticalAlignment="Center" Padding="3" Margin="2"/>
                        <Button Content="= 51.7" Click="SetTextButtonClick" Tag="NumericTextBox|Value|51.7" HorizontalAlignment="Left" VerticalAlignment="Center" Padding="3" Margin="2"/>
                    </StackPanel>

                    <TextBlock Text="DecimalPlaces: " VerticalAlignment="Center"/>
                    <TextBox Text="{Binding DecimalPlaces, Mode=TwoWay}" Width="150" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="2"/>

                    <TextBlock Text="Minimum: " VerticalAlignment="Center"/>
                    <TextBox Text="{Binding Minimum, Mode=TwoWay}" Width="150" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="2"/>

                    <TextBlock Text="Maximum: " VerticalAlignment="Center"/>
                    <TextBox Text="{Binding Maximum, Mode=TwoWay}" Width="150" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="2"/>

                    <TextBlock Text="ValueRatio: "/>
                    <TextBox Text="{Binding ValueRatio}" Width="150" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="2"/>

                    <TextBlock Text="LargeChange: "/>
                    <TextBox Text="{Binding LargeChange}" Width="150" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="2"/>

                    <TextBlock Text="SmallChange: "/>
                    <TextBox Text="{Binding SmallChange}" Width="150" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="2"/>

                    <TextBlock Text="DisplayUpDownButtons: "/>
                    <CheckBox IsChecked="{Binding DisplayUpDownButtons}" VerticalAlignment="Center" Margin="2"/>
                    
                    <TextBlock Text="Inherited from TextBox: "/>
                    <Separator Margin="20"/>
                    
                    <TextBlock Text="Validate: " VerticalAlignment="Center"/>
                    <StackPanel Orientation="Horizontal">
                        <Button Content="Trigger validation" Click="TextBoxValidateButtonClick" Tag="NumericTextBox" HorizontalAlignment="Left" VerticalAlignment="Center" Padding="3" Margin="2"/>
                        <Button Content="Trigger cancellation" Click="TextBoxCancelButtonClick" Tag="NumericTextBox" HorizontalAlignment="Left" VerticalAlignment="Center" Padding="3" Margin="2"/>
                    </StackPanel>

                    <TextBlock Text="ValidateWithEnter: " VerticalAlignment="Center"/>
                    <CheckBox IsChecked="{Binding ValidateWithEnter, Mode=TwoWay}" VerticalAlignment="Center" Margin="2"/>

                    <TextBlock Text="ValidateOnTextChange: " VerticalAlignment="Center"/>
                    <CheckBox IsChecked="{Binding ValidateOnTextChange, Mode=TwoWay}" VerticalAlignment="Center" Margin="2"/>

                    <TextBlock Text="ValidateOnLostFocus: " VerticalAlignment="Center"/>
                    <CheckBox IsChecked="{Binding ValidateOnLostFocus, Mode=TwoWay}" VerticalAlignment="Center" Margin="2"/>

                    <TextBlock Text="CancelWithEscape: " VerticalAlignment="Center"/>
                    <CheckBox IsChecked="{Binding CancelWithEscape, Mode=TwoWay}" VerticalAlignment="Center" Margin="2"/>

                    <TextBlock Text="CancelOnLostFocus: " VerticalAlignment="Center"/>
                    <CheckBox IsChecked="{Binding CancelOnLostFocus, Mode=TwoWay}" VerticalAlignment="Center" Margin="2"/>

                    <TextBlock Text="Validation count: " VerticalAlignment="Center"/>
                    <TextBlock Text="{Binding ValidationCount, StringFormat=Validation count: {0}}" VerticalAlignment="Center" Margin="2"/>

                    <TextBlock Text="Cancellation count: " VerticalAlignment="Center"/>
                    <TextBlock Text="{Binding CancellationCount, StringFormat=Cancellation count: {0}}" VerticalAlignment="Center" Margin="2"/>

                    <TextBlock Text="Click here to lose focus" VerticalAlignment="Center"/>
                    <TextBox VerticalAlignment="Center" Margin="2"/>
                </sskk:KeyValueGrid>
            </StackPanel>
        </TabItem>

        <TabItem Header="SliderTextBox" DataContext="{Binding SliderTextBoxViewModel, RelativeSource={RelativeSource AncestorType=Window}}">
            <StackPanel>
                <sskk:SliderTextBox x:Name="SliderTextBox" Text="{Binding Text}" Value="{Binding Value}" LargeChange="{Binding LargeChange}" SmallChange="{Binding SmallChange}"
                                    ValueRatio="{Binding ValueRatio, Mode=TwoWay}" DisplayRangeIndicator="{Binding DisplayRangeIndicator}" RangeIndicatorBrush="{Binding RangeIndicatorBrush}"
                                    DisplayUpDownButtons="{Binding DisplayUpDownButtons}" IsMouseChangeEnabled="{Binding IsMouseChangeEnabled}"
                                    MouseValidationTrigger="{Binding MouseValidationTrigger, Mode=TwoWay}" WatermarkContent="Watermark" ValidateOnTextChange="{Binding ValidateOnTextChange, Mode=TwoWay}"
                                    Minimum="{Binding Minimum, Mode=TwoWay}" Maximum="{Binding Maximum, Mode=TwoWay}" DecimalPlaces="{Binding DecimalPlaces, Mode=TwoWay}"
                                    ValidateWithEnter="{Binding ValidateWithEnter, Mode=TwoWay}" ValidateOnLostFocus="{Binding ValidateOnLostFocus, Mode=TwoWay}"
                                    CancelWithEscape="{Binding CancelWithEscape, Mode=TwoWay}" CancelOnLostFocus="{Binding CancelOnLostFocus, Mode=TwoWay}"
                                    ValidateCommand="{Binding ValidateCommand}" CancelCommand="{Binding CancelCommand}" Margin="15"/>
                <sskk:KeyValueGrid>
                    <TextBlock Text="Text: " VerticalAlignment="Center"/>
                    <TextBlock Text="{Binding Text}" VerticalAlignment="Center" Margin="2"/>

                    <TextBlock Text="Value: " VerticalAlignment="Center"/>
                    <TextBlock Text="{Binding Value}" VerticalAlignment="Center" Margin="2"/>

                    <TextBlock Text="Value: " VerticalAlignment="Center"/>
                    <Slider Minimum="{Binding Minimum}" Maximum="{Binding Maximum}" Value="{Binding Value}" Height="32"/>

                    <TextBlock Text="SetText: " VerticalAlignment="Center"/>
                    <StackPanel Orientation="Horizontal">
                        <Button Content="= '52'" Click="SetTextButtonClick" Tag="SliderTextBox|Text|52" HorizontalAlignment="Left" VerticalAlignment="Center" Padding="3" Margin="2"/>
                        <Button Content="= '52.7'" Click="SetTextButtonClick" Tag="SliderTextBox|Text|52.7" HorizontalAlignment="Left" VerticalAlignment="Center" Padding="3" Margin="2"/>
                        <Button Content="= 'Hello'" Click="SetTextButtonClick" Tag="SliderTextBox|Text|Hello" HorizontalAlignment="Left" VerticalAlignment="Center" Padding="3" Margin="2"/>
                    </StackPanel>

                    <TextBlock Text="SetValue: " VerticalAlignment="Center"/>
                    <StackPanel Orientation="Horizontal">
                        <Button Content="= 51" Click="SetTextButtonClick" Tag="SliderTextBox|Value|51" HorizontalAlignment="Left" VerticalAlignment="Center" Padding="3" Margin="2"/>
                        <Button Content="= 51.7" Click="SetTextButtonClick" Tag="SliderTextBox|Value|51.7" HorizontalAlignment="Left" VerticalAlignment="Center" Padding="3" Margin="2"/>
                    </StackPanel>
                    
                    <TextBlock Text="DisplayRangeIndicator: "/>
                    <CheckBox IsChecked="{Binding DisplayRangeIndicator}" VerticalAlignment="Center" Margin="2"/>

                    <TextBlock Text="RangeIndicatorBrush: "/>
                    <Button VerticalAlignment="Center" Content="Switch" Click="SliderTextBoxRangeIndicatorBrushButton"/>
                   
                    <TextBlock Text="IsMouseChangeEnabled: "/>
                    <CheckBox IsChecked="{Binding IsMouseChangeEnabled}" VerticalAlignment="Center" Margin="2"/>

                    <TextBlock Text="MouseValidationTrigger: "/>
                    <Button Click="SliderTextBoxMouseValidationTriggerButton" VerticalAlignment="Center">
                        <TextBlock Text="{Binding MouseValidationTrigger, Mode=TwoWay}"/>
                    </Button>

                    <TextBlock Text="Inherited from NumericTextBox: "/>
                    <Separator Margin="20"/>

                    <TextBlock Text="DecimalPlaces: " VerticalAlignment="Center"/>
                    <TextBox Text="{Binding DecimalPlaces, Mode=TwoWay}" Width="150" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="2"/>

                    <TextBlock Text="Minimum: " VerticalAlignment="Center"/>
                    <TextBox Text="{Binding Minimum, Mode=TwoWay}" Width="150" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="2"/>

                    <TextBlock Text="Maximum: " VerticalAlignment="Center"/>
                    <TextBox Text="{Binding Maximum, Mode=TwoWay}" Width="150" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="2"/>

                    <TextBlock Text="ValueRatio: "/>
                    <TextBox Text="{Binding ValueRatio}" Width="150" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="2"/>

                    <TextBlock Text="LargeChange: "/>
                    <TextBox Text="{Binding LargeChange}" Width="150" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="2"/>

                    <TextBlock Text="SmallChange: "/>
                    <TextBox Text="{Binding SmallChange}" Width="150" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="2"/>

                    <TextBlock Text="DisplayUpDownButtons: "/>
                    <CheckBox IsChecked="{Binding DisplayUpDownButtons}" VerticalAlignment="Center" Margin="2"/>
                    
                    <TextBlock Text="Inherited from TextBox: "/>
                    <Separator Margin="20"/>

                    <TextBlock Text="Validate: " VerticalAlignment="Center"/>
                    <StackPanel Orientation="Horizontal">
                        <Button Content="Trigger validation" Click="TextBoxValidateButtonClick" Tag="SliderTextBox" HorizontalAlignment="Left" VerticalAlignment="Center" Padding="3" Margin="2"/>
                        <Button Content="Trigger cancellation" Click="TextBoxCancelButtonClick" Tag="SliderTextBox" HorizontalAlignment="Left" VerticalAlignment="Center" Padding="3" Margin="2"/>
                    </StackPanel>

                    <TextBlock Text="ValidateWithEnter: " VerticalAlignment="Center"/>
                    <CheckBox IsChecked="{Binding ValidateWithEnter, Mode=TwoWay}" VerticalAlignment="Center" Margin="2"/>

                    <TextBlock Text="ValidateOnTextChange: " VerticalAlignment="Center"/>
                    <CheckBox IsChecked="{Binding ValidateOnTextChange, Mode=TwoWay}" VerticalAlignment="Center" Margin="2"/>

                    <TextBlock Text="ValidateOnLostFocus: " VerticalAlignment="Center"/>
                    <CheckBox IsChecked="{Binding ValidateOnLostFocus, Mode=TwoWay}" VerticalAlignment="Center" Margin="2"/>

                    <TextBlock Text="CancelWithEscape: " VerticalAlignment="Center"/>
                    <CheckBox IsChecked="{Binding CancelWithEscape, Mode=TwoWay}" VerticalAlignment="Center" Margin="2"/>

                    <TextBlock Text="CancelOnLostFocus: " VerticalAlignment="Center"/>
                    <CheckBox IsChecked="{Binding CancelOnLostFocus, Mode=TwoWay}" VerticalAlignment="Center" Margin="2"/>

                    <TextBlock Text="Validation count: " VerticalAlignment="Center"/>
                    <TextBlock Text="{Binding ValidationCount, StringFormat=Validation count: {0}}" VerticalAlignment="Center" Margin="2"/>

                    <TextBlock Text="Cancellation count: " VerticalAlignment="Center"/>
                    <TextBlock Text="{Binding CancellationCount, StringFormat=Cancellation count: {0}}" VerticalAlignment="Center" Margin="2"/>

                    <TextBlock Text="Click here to lose focus" VerticalAlignment="Center"/>
                    <TextBox VerticalAlignment="Center" Margin="2"/>
                </sskk:KeyValueGrid>
            </StackPanel>       
        </TabItem>

        <TabItem Header="FilteringComboBox" DataContext="{Binding FilteringComboBoxViewModel, RelativeSource={RelativeSource AncestorType=Window}}">
            <StackPanel Margin="10">
                <TextBlock>
                    <Run Text="IsSelectionBoxHighlighted:"/>
                    <Run Text="{Binding IsSelectionBoxHighlighted, ElementName=FilteringComboBox, Mode=OneWay}"/>
                </TextBlock>
                <TextBlock>
                    <Run Text="SelectedItem:"/>
                    <Run Text="{Binding SelectedItem, ElementName=FilteringComboBox}"/>
                </TextBlock>
                <sskk:FilteringComboBox x:Name="FilteringComboBox" ItemsSource="{Binding Names}">
                    <sskk:FilteringComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Text}"/>
                        </DataTemplate>
                    </sskk:FilteringComboBox.ItemTemplate>
                </sskk:FilteringComboBox>
            </StackPanel>
        </TabItem>

        <TabItem Header="Property Grid">
            <Grid Margin="10">
                <sskk:PropertyGrid x:Name="PropertyGrid" SelectedObject="{Binding}"/>
            </Grid>
        </TabItem>

        <TabItem Header="TextLogViewer">
            <StackPanel>
                <sskk:TextLogViewer x:Name="LogViewer" Height="200"/>
            </StackPanel>
        </TabItem>
        <TabItem Header="CheckBox">
            <StackPanel>
                <CheckBox IsThreeState="False" Margin="5" Content="Test"/>
                <CheckBox IsThreeState="True" Margin="5"/>
            </StackPanel>
        </TabItem>
        
        <TabItem Header="ColorPicker">
            <StackPanel>
                <sskk:ColorPicker x:Name="ColorPicker1" Margin="20" Color="{Binding ElementName=ColorPicker2, Path=Color}"/>
                <sskk:ColorPicker x:Name="ColorPicker2" Margin="20"/>
            </StackPanel>
        </TabItem>

        <TabItem Header="VectorEditor" DataContext="{Binding VectorEditorViewModel, RelativeSource={RelativeSource AncestorType=Window}}">
            <StackPanel>
                <sskk:Vector2Editor Vector="{Binding Vector2}" Margin="5,10"/>
                <sskk:Vector3Editor Vector="{Binding Vector3}" Margin="5,10"/>
                <sskk:Vector4Editor Vector="{Binding Vector4}" Margin="5,10"/>
                <sskk:MatrixEditor Matrix="{Binding Matrix}" Margin="5,10"/>
                <sskk:KeyValueGrid Margin="5,20">
                    <TextBlock Text="Vector2: " VerticalAlignment="Center"/>
                    <TextBlock Text="{Binding Vector2}" VerticalAlignment="Center" Margin="2,5"/>
                    <TextBlock Text="Vector3: " VerticalAlignment="Center"/>
                    <TextBlock Text="{Binding Vector3}" VerticalAlignment="Center" Margin="2,5"/>
                    <TextBlock Text="Vector4: " VerticalAlignment="Center"/>
                    <TextBlock Text="{Binding Vector4}" VerticalAlignment="Center" Margin="2,5"/>
                    <TextBlock Text="Matrix: " VerticalAlignment="Center"/>
                    <TextBlock Text="{Binding Matrix}" VerticalAlignment="Center" Margin="2,5"/>
                </sskk:KeyValueGrid>
            </StackPanel>
        </TabItem>

        <TabItem Header="ListView">
            <ListView>
                <ListView.View>
                    <GridView>
                        <GridViewColumn Header="Name"/>
                        <GridViewColumn Header="Location" Width="Auto"/>
                    </GridView>
                </ListView.View>
                <TextBlock Text="AAA"/>
                <TextBlock Text="BBB"/>
                <TextBlock Text="CCC"/>
                <TextBlock Text="DDD"/>
            </ListView>

            <!--<ListView>
                <ListView.View>
                    <GridView 
                </ListView.View>
            </ListView>-->
        </TabItem>

        <TabItem Header="ListBox">

            <ListBox ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                <TextBlock Text="AAA"/>
                <TextBlock Text="BBB"/>
                <TextBlock Text="CCC"/>
                <TextBlock Text="DDD"/>
                <TextBlock Text="This is a very very very very very very very very very very long item to test content wrapping">
                    <!-- TODO: fix this behavior! -->
                    <!--<i:Interaction.Behaviors>
                        <sskk:TextTrimmingBehavior WordSeparators="\t\\/" ContentMargin="6" TrimPosition="End" Offset="4" TrimMode="Word"/>
                    </i:Interaction.Behaviors>-->
                </TextBlock>
            </ListBox>

        </TabItem>

        <TabItem Header="AsyncContentControl">
            
            <DockPanel LastChildFill="True">
                
                <StackPanel DockPanel.Dock="Left">
                    <Button Content="LoadContent" Margin="8" Padding="5" Command="{Binding ElementName=Acc, Path=LoadContentCommand}"/>
                    <Button Content="CancelContentLoading" Margin="8" Padding="5" Command="{Binding ElementName=Acc, Path=CancelContentLoadingCommand}"/>
                    <GroupBox Header="Data Side">
                        <Button Content="Set Loading" Margin="8" Padding="5" Click="OnAsyncContentControlSetLoadingButtonClick"/>
                    </GroupBox>
                </StackPanel>

                <DockPanel LastChildFill="True" Margin="8">
                    <StackPanel DockPanel.Dock="Top">
                        <TextBlock>
                            <Run Text="LoadState: "/>
                            <Run Text="{Binding ElementName=Acc, Path=LoadState}"/>
                        </TextBlock>
                        <TextBlock>
                            <Run Text="IsContentNotLoaded: "/>
                            <Run Text="{Binding ElementName=Acc, Path=IsContentNotLoaded, Mode=OneWay}"/>
                        </TextBlock>
                        <TextBlock>
                            <Run Text="IsContentLoading: "/>
                            <Run Text="{Binding ElementName=Acc, Path=IsContentLoading, Mode=OneWay}"/>
                        </TextBlock>
                        <TextBlock>
                            <Run Text="IsContentLoaded: "/>
                            <Run Text="{Binding ElementName=Acc, Path=IsContentLoaded, Mode=OneWay}"/>
                        </TextBlock>
                    </StackPanel>

                    <!--<Expander Header="Test" Style="{DynamicResource PropertyGridExpanderStyle}">-->
                    <!--<sskk:AsyncContentControl x:Name="acc" Margin="4" Content="{DynamicResource defaultString}" AwaitingContent="Loading..."
                                                 LoadState="{Binding LoadState}"
                                                 LoadContentOnInitialized="True"
                                                 LoadContentCommand="{Binding LoadContentCommand}"
                                                 CancelContentLoadingCommand="{Binding CancelContentLoadingCommand}">-->
                    <controls:AsyncContentControl x:Name="Acc" Margin="4">

                        <controls:AsyncContentControl.ContentTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Rectangle Width="128" Height="32" Fill="Blue" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    <TextBlock Foreground="Red" Text="{Binding}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Grid>
                            </DataTemplate>
                        </controls:AsyncContentControl.ContentTemplate>

                        <controls:AsyncContentControl.AwaitingContentTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Ellipse Width="128" Height="64" Fill="Gray"/>
                                    <ContentControl Content="{Binding}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                </Grid>
                            </DataTemplate>
                        </controls:AsyncContentControl.AwaitingContentTemplate>

                    </controls:AsyncContentControl>
                    <!--</Expander>-->

                </DockPanel>

            </DockPanel>
            
        </TabItem>

                <!-- EffectEditor disabled, currently not working -->
                <!--<Button DockPanel.Dock="Top" Content="Produce Output Data" Margin="4" Padding="4" MinWidth="120" HorizontalAlignment="Left" Click="EffectEditorProduceOutputDataButtonClick"/>-->
                <!--<sskk:AutoSubmitTextBox x:Name="search" DockPanel.Dock="Top" Margin="2" AutoSubmitDelay="0" Style="{DynamicResource SearchAutoSubmitTextBoxStyle}"/>-->
                <!--<efx:EffectEditor x:Name="effectEditor" SearchText="{Binding ElementName=search, Path=AutoSubmittedText}"/>-->
        <TabItem Header="ToolBar">
            <StackPanel>
                <ToolBarTray>
                    <ToolBar VerticalAlignment="Top" Header="Test Bar 1">
                        <Button Content="Test 1" Padding="5" Margin="2"/>
                        <Button Content="Test 2" Padding="5" Margin="2"/>
                    </ToolBar>
                    <ToolBar VerticalAlignment="Top" Header="Test Bar 2">
                        <Button Content="Test 1" Padding="5" Margin="2"/>
                        <Button Content="Test 2" Padding="5" Margin="2"/>
                    </ToolBar>
                </ToolBarTray>
            </StackPanel>
        </TabItem>

        <TabItem Header="ComboBox">
            <StackPanel>
                <ComboBox IsEditable="True" Margin="15">
                    <ComboBoxItem Content="Test Item 1"/>
                    <ComboBoxItem Content="Test Item 2"/>
                    <ComboBoxItem Content="Test Item 3"/>
                    <ComboBoxItem Content="Test Item very very very long 4"/>
                    <ComboBoxItem Content="Test Item 5"/>
                </ComboBox>
                <ComboBox IsEditable="False" Margin="15">
                    <ComboBoxItem Content="Test Item 1"/>
                    <ComboBoxItem Content="Test Item 2"/>
                    <ComboBoxItem Content="Test Item 3"/>
                    <ComboBoxItem Content="Test Item very very very long 4"/>
                    <ComboBoxItem Content="Test Item 5"/>
                </ComboBox>

                <!--<legacy:DropDownButton Content="DropDown" Width="100">
                    <legacy:DropDownButton.DropDownContent>
                        <ListBox>
                            <ListBoxItem Content="Test Item 1"/>
                            <ListBoxItem Content="Test Item 2"/>
                            <ListBoxItem Content="Test Item 3"/>
                            <ListBoxItem Content="Test Item very very very long 4"/>
                            <ListBoxItem Content="Test Item 5"/>
                        </ListBox>
                    </legacy:DropDownButton.DropDownContent>
                </legacy:DropDownButton>-->
            </StackPanel>
        </TabItem>

        <TabItem Header="ScaleBar">
            <StackPanel>
                <TextBlock Text="Simple ScaleBar" Margin="10,20,10,0" />
                <sskk:ScaleBar VerticalAlignment="Top" Margin="10, 10" Height="25" UnitsPerTick="10" StartUnit="-20"
                            IsZoomingOnMouseWheel="True" IsDraggingOnLeftMouseButton="True"/>

                <TextBlock Text="Fixed size ScaleBar" Margin="10,20,10,0" />
                <sskk:ScaleBar VerticalAlignment="Top" Margin="10, 10" Height="25" UnitsPerTick="10" StartUnit="0"
                            />

                <TextBlock Text="Distance ScaleBar" Margin="10,20,10,0" />
                <sskk:ScaleBar VerticalAlignment="Top" Margin="10, 10" Height="25" UnitsPerTick="1" StartUnit="-2"
                            IsZoomingOnMouseWheel="True" IsDraggingOnLeftMouseButton="True">
                    <sskk:ScaleBar.UnitSystem>
                        <sskk:UnitSystem Symbol="m">
                            <sskk:UnitSystem.Conversions>
                                <!-- This order ensure that smaller conversions have priority and will display 5mm instead of 0.5cm. -->
                                <sskk:UnitConversion Symbol="Tm" Value="1000000000000" IsMultipliable="True" />
                                <sskk:UnitConversion Symbol="Gm" Value="1000000000" IsMultipliable="True" />
                                <sskk:UnitConversion Symbol="Mm" Value="1000000" IsMultipliable="True" />
                                <sskk:UnitConversion Symbol="km" Value="1000" IsMultipliable="True" />
                                <sskk:UnitConversion Symbol="hm" Value="100" IsMultipliable="True" />
                                <sskk:UnitConversion Symbol="dam" Value="10" IsMultipliable="True" />
                                <!-- "m" being the base unit, it is not necessary to add it as a conversion, but we do it here for multiplication priorities. --> 
                                <sskk:UnitConversion Symbol="m" Value="1" IsMultipliable="True" />
                                <sskk:UnitConversion Symbol="dm" Value="0.1" IsMultipliable="True" />
                                <sskk:UnitConversion Symbol="cm" Value="0.01" IsMultipliable="True" />
                                <sskk:UnitConversion Symbol="mm" Value="0.001" IsMultipliable="True" />
                                <sskk:UnitConversion Symbol="µm" Value="0.000001" IsMultipliable="True" />
                                <sskk:UnitConversion Symbol="nm" Value="0.000000001" IsMultipliable="True" />
                            </sskk:UnitSystem.Conversions>
                        </sskk:UnitSystem>
                    </sskk:ScaleBar.UnitSystem>
                </sskk:ScaleBar>

                <TextBlock Text="Memory ScaleBar" Margin="10,20,10,0" />
                <sskk:ScaleBar VerticalAlignment="Top" Margin="10, 10" Height="25" UnitsPerTick="512" StartUnit="-1024"
                            IsZoomingOnMouseWheel="True" IsDraggingOnLeftMouseButton="True"
                               MinimumUnitsPerTick="1" MaximumUnitsPerTick="1E20">
                    <sskk:ScaleBar.Resources>
                        <sskk:UnitGroupingCollection  x:Key="ByteGrouping">
                            <sskk:UnitGrouping LargeIntervalSize="8" SmallIntervalCount="8" />
                            <sskk:UnitGrouping LargeIntervalSize="16" SmallIntervalCount="8" />
                            <sskk:UnitGrouping LargeIntervalSize="64" SmallIntervalCount="8" />
                            <sskk:UnitGrouping LargeIntervalSize="128" SmallIntervalCount="8" />
                            <sskk:UnitGrouping LargeIntervalSize="256" SmallIntervalCount="8" />
                            <sskk:UnitGrouping LargeIntervalSize="512" SmallIntervalCount="8" />
                        </sskk:UnitGroupingCollection>
                        <sskk:UnitGroupingCollection  x:Key="ConvertedByteGrouping">
                            <sskk:UnitGrouping LargeIntervalSize="1" SmallIntervalCount="8" />
                            <sskk:UnitGrouping LargeIntervalSize="4" SmallIntervalCount="8" />
                            <sskk:UnitGrouping LargeIntervalSize="8" SmallIntervalCount="8" />
                            <sskk:UnitGrouping LargeIntervalSize="16" SmallIntervalCount="8" />
                            <sskk:UnitGrouping LargeIntervalSize="64" SmallIntervalCount="8" />
                            <sskk:UnitGrouping LargeIntervalSize="128" SmallIntervalCount="8" />
                            <sskk:UnitGrouping LargeIntervalSize="256" SmallIntervalCount="8" />
                            <sskk:UnitGrouping LargeIntervalSize="512" SmallIntervalCount="8" />
                        </sskk:UnitGroupingCollection>
                    </sskk:ScaleBar.Resources>
                    <sskk:ScaleBar.UnitSystem>
                        <sskk:UnitSystem Symbol="B" GroupingValues="{StaticResource ByteGrouping}">                          
                            <sskk:UnitSystem.Conversions>
                                <sskk:UnitConversion Symbol="KiB" Value="1024" GroupingValues="{StaticResource ConvertedByteGrouping}" />
                                <sskk:UnitConversion Symbol="MiB" Value="1048576" GroupingValues="{StaticResource ConvertedByteGrouping}" />
                                <sskk:UnitConversion Symbol="GiB" Value="1073741824" GroupingValues="{StaticResource ConvertedByteGrouping}" />
                                <sskk:UnitConversion Symbol="TiB" Value="1099511627776" GroupingValues="{StaticResource ConvertedByteGrouping}" />
                                <sskk:UnitConversion Symbol="PiB" Value="1125899906842624" GroupingValues="{StaticResource ConvertedByteGrouping}" />
                                <sskk:UnitConversion Symbol="EiB" Value="1152921504606846976" GroupingValues="{StaticResource ConvertedByteGrouping}" />
                            </sskk:UnitSystem.Conversions>
                        </sskk:UnitSystem>
                    </sskk:ScaleBar.UnitSystem>
                </sskk:ScaleBar>

                <TextBlock Text="Timeline ScaleBar" Margin="10,20,10,0" />
                <sskk:ScaleBar VerticalAlignment="Top" Margin="10, 10" Height="25" UnitsPerTick="3600" StartUnit="-7200" IsZoomingOnMouseWheel="True" IsDraggingOnLeftMouseButton="True">
                    <sskk:ScaleBar.UnitSystem>
                        <sskk:UnitSystem Symbol="s">
                            <sskk:UnitSystem.GroupingValues>
                                <sskk:UnitGrouping LargeIntervalSize="1" SmallIntervalCount="10" />
                                <sskk:UnitGrouping LargeIntervalSize="2" SmallIntervalCount="8" />
                                <sskk:UnitGrouping LargeIntervalSize="5" SmallIntervalCount="10" />
                                <sskk:UnitGrouping LargeIntervalSize="10" SmallIntervalCount="10" />
                                <sskk:UnitGrouping LargeIntervalSize="15" SmallIntervalCount="5" />
                            </sskk:UnitSystem.GroupingValues>
                            <sskk:UnitSystem.Conversions>
                                <sskk:UnitConversion Symbol="min" Value="60">
                                    <sskk:UnitConversion.GroupingValues>
                                        <sskk:UnitGrouping LargeIntervalSize="1" SmallIntervalCount="10" />
                                        <sskk:UnitGrouping LargeIntervalSize="2" SmallIntervalCount="8" />
                                        <sskk:UnitGrouping LargeIntervalSize="5" SmallIntervalCount="10" />
                                        <sskk:UnitGrouping LargeIntervalSize="10" SmallIntervalCount="10" />
                                        <sskk:UnitGrouping LargeIntervalSize="15" SmallIntervalCount="5" />
                                    </sskk:UnitConversion.GroupingValues>
                                </sskk:UnitConversion>
                                <sskk:UnitConversion Symbol="H" Value="3600">
                                    <sskk:UnitConversion.GroupingValues>
                                        <sskk:UnitGrouping LargeIntervalSize="1" SmallIntervalCount="10" />
                                        <sskk:UnitGrouping LargeIntervalSize="2" SmallIntervalCount="8" />
                                        <sskk:UnitGrouping LargeIntervalSize="6" SmallIntervalCount="12" />
                                        <sskk:UnitGrouping LargeIntervalSize="12" SmallIntervalCount="12" />
                                    </sskk:UnitConversion.GroupingValues>
                                </sskk:UnitConversion>
                                <!-- We put weeks before days because we want to give priority to month before multipliable years, to avoid writing 0.2 weeks for instance -->
                                <sskk:UnitConversion Symbol="w" Value="604800" IsMultipliable="True" />
                                <sskk:UnitConversion Symbol="d" Value="86400" IsMultipliable="True" />                                
                                <!-- We put years before month because we want to give priority to month before multipliable years, to avoid writing 0.2 years for instance -->
                                <sskk:UnitConversion Symbol=" year" Value="31536000">
                                    <sskk:UnitConversion.GroupingValues>
                                        <sskk:UnitGrouping LargeIntervalSize="1" SmallIntervalCount="12" IsMultipliable="True"/>
                                    </sskk:UnitConversion.GroupingValues>
                                </sskk:UnitConversion>
                                <sskk:UnitConversion Symbol=" month" Value="2592000">
                                    <sskk:UnitConversion.GroupingValues>
                                        <sskk:UnitGrouping LargeIntervalSize="1" SmallIntervalCount="10" />
                                        <sskk:UnitGrouping LargeIntervalSize="2" SmallIntervalCount="8" />
                                        <sskk:UnitGrouping LargeIntervalSize="6" SmallIntervalCount="12" />
                                    </sskk:UnitConversion.GroupingValues>
                                </sskk:UnitConversion>
                            </sskk:UnitSystem.Conversions>
                        </sskk:UnitSystem>
                    </sskk:ScaleBar.UnitSystem>
                </sskk:ScaleBar>

            </StackPanel>
        </TabItem>

        <!--<TabItem Header="Telerik">
            <TabControl Margin="8">
                <TabItem Header="TreeView">
                    <telerik:RadTreeView x:Name="RadTreeView">
                        <telerik:RadTreeView.ItemTemplate>
                            <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                                <TextBlock Text="{Binding Content}"/>
                            </HierarchicalDataTemplate>
                        </telerik:RadTreeView.ItemTemplate>
                    </telerik:RadTreeView>
                </TabItem>
                
                <TabItem Header="ListView">
                    
                </TabItem>
            </TabControl>
        </TabItem>-->

        <TabItem Header="VirtualizingTilePanel">
            <ListBox x:Name="VirtTilePanel" Background="Lime" ItemsSource="{Binding}" VirtualizingPanel.IsVirtualizing="True" VirtualizingPanel.ScrollUnit="Pixel" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Visible">
                <!--<ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Grid Width="120" Height="120" Background="Red">
                            <TextBlock Text="{Binding}"/>
                        </Grid>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>-->
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <Style.Setters>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ListBoxItem">
                                        <Grid Background="Red">
                                            <TextBlock Text="{Binding}"/>
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style.Setters>
                    </Style>
                </ListBox.ItemContainerStyle>
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <sskk:VirtualizingTilePanel Orientation="Vertical" ItemSlotSize="128,128" MinimumItemSpacing="4" MaximumItemSpacing="48"/>
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
            </ListBox>
        </TabItem>

        <!--<TabItem Header="EditableListBox (renaming)" IsSelected="True">
            <assetEditor:EditableContentListBox x:Name="RenamingEditableListBox" ItemsSource="{Binding}">
                <assetEditor:EditableContentListBox.ItemContainerStyle>
                    <Style TargetType="assetEditor:EditableContentListBoxItem">
                        <Setter Property="IsEditing" Value="{Binding Name.IsEditing}"/>
                    </Style>
                </assetEditor:EditableContentListBox.ItemContainerStyle>
                <assetEditor:EditableContentListBox.ItemTemplate>
                    <DataTemplate>
                        <Button Content="{Binding Name.Value}" Width="{Binding Name.Value}" Margin="3" Padding="4"/>
                    </DataTemplate>
                </assetEditor:EditableContentListBox.ItemTemplate>
                <assetEditor:EditableContentListBox.EditItemTemplate>
                    <DataTemplate>
                        <Button Margin="3" Padding="4">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBox Grid.Column="0" Text="{Binding Name.EditingValue}"/>
                                <Button Grid.Column="1" Content="Validate" Command="{Binding Name.ValidateEditionCommand}" Margin="1" Padding="2"/>
                                <Button Grid.Column="2" Content="Cancel" Command="{Binding Name.CancelEditionCommand}" Margin="1" Padding="2"/>
                            </Grid>
                        </Button>
                    </DataTemplate>
                </assetEditor:EditableContentListBox.EditItemTemplate>
            </assetEditor:EditableContentListBox>
        </TabItem>-->
        
    </TabControl>
</Window>
