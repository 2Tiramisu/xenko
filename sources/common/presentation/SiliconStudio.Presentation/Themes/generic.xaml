<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ctrl="clr-namespace:SiliconStudio.Presentation.Controls"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:cvt="clr-namespace:SiliconStudio.Presentation.ValueConverters"
                    xmlns:mwt="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
                    mc:Ignorable="d">

    <!--<Style TargetType="{x:Type ctrl:PropertyGrid}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrl:PropertyGrid}">
                    <ScrollViewer
                        HorizontalScrollBarVisibility="Disabled"
                        VerticalScrollBarVisibility="{TemplateBinding VerticalScrollBarVisibility}">
                        <ItemsPresenter/>
                    </ScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <!-- ### EditableListBox ################################################################################################################################################# -->
    <SolidColorBrush x:Key="GlyphBrush" Color="Black"/>
    
    <Style x:Key="DefaultTextBoxStyle" TargetType="ctrl:TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ctrl:TextBox">
                    <mwt:ListBoxChrome Background="{TemplateBinding Panel.Background}" BorderBrush="{TemplateBinding Border.BorderBrush}" BorderThickness="{TemplateBinding Border.BorderThickness}" RenderMouseOver="{TemplateBinding UIElement.IsMouseOver}" RenderFocused="{TemplateBinding UIElement.IsKeyboardFocusWithin}" Name="Bd" SnapsToDevicePixels="True">
                        <Grid Focusable="False">
                            <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Padding="{TemplateBinding Padding}" Visibility="{TemplateBinding IsFocused, Converter={cvt:VisibleOrCollapsed}}"/>
                            <ContentControl x:Name="Watermark" Content="{TemplateBinding WatermarkContent}" ContentTemplate="{TemplateBinding WatermarkContentTemplate}" VerticalAlignment="Center" Margin="6,2,2,2" Focusable="False"/>
                            <TextBlock x:Name="PART_TrimmedText" Text="{TemplateBinding TrimmedText}" Cursor="IBeam" Margin="3,2" Focusable="False" Visibility="{TemplateBinding IsFocused, Converter={cvt:Chained {cvt:InvertBool}, {cvt:VisibleOrCollapsed}}}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </mwt:ListBoxChrome>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasText" Value="True">
                            <Setter TargetName="Watermark" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter TargetName="Bd" Property="Panel.Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                            <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            <Setter TargetName="PART_TrimmedText" Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="WatermarkContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding Mode=OneTime}" IsHitTestVisible="False" FontStyle="Italic"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ctrl:PropertyView">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ctrl:PropertyView">
                    <Border BorderThickness="{TemplateBinding Border.BorderThickness}" BorderBrush="{TemplateBinding Border.BorderBrush}" Name="Bd" SnapsToDevicePixels="True">
                        <ScrollViewer CanContentScroll="False" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" Background="{TemplateBinding Panel.Background}" Padding="{TemplateBinding Control.Padding}" x:Name="_pv_scrollviewer_" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Focusable="False">
                            <ItemsPresenter/>
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter TargetName="Bd" Property="Panel.Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                        </Trigger>
                        <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="True">
                            <Setter TargetName="_pv_scrollviewer_" Property="ScrollViewer.CanContentScroll" Value="True">
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ctrl:PropertyViewItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ctrl:PropertyViewItem">
                    <Border BorderThickness="{TemplateBinding Border.BorderThickness}" BorderBrush="{TemplateBinding Border.BorderBrush}" Name="Bd" SnapsToDevicePixels="True">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <ToggleButton IsChecked="False" ClickMode="Press" Name="Expander">
                                <ToggleButton.Style>
                                    <Style TargetType="ToggleButton">
                                        <Style.Resources>
                                            <ResourceDictionary />
                                        </Style.Resources>
                                        <Setter Property="Focusable" Value="False"/>
                                        <Setter Property="Width" Value="16"/>
                                        <Setter Property="Height" Value="16"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="ToggleButton">
                                                    <Border Padding="5,5,5,5" Background="#00FFFFFF" Width="16" Height="16">
                                                        <Path Fill="#00FFFFFF" Stroke="#FF989898" Name="ExpandPath">
                                                            <Path.Data>
                                                                <PathGeometry Figures="M0,0L0,6L6,0z" />
                                                            </Path.Data>
                                                            <Path.RenderTransform>
                                                                <RotateTransform Angle="135" CenterX="3" CenterY="3" />
                                                            </Path.RenderTransform>
                                                        </Path>
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                                                            <Setter TargetName="ExpandPath" Property="Shape.Stroke" Value="#FF1BBBFA"/>
                                                            <Setter TargetName="ExpandPath" Property="Shape.Fill" Value="#00FFFFFF"/>
                                                        </Trigger>
                                                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                                                            <Setter TargetName="ExpandPath" Property="UIElement.RenderTransform">
                                                                <Setter.Value>
                                                                    <RotateTransform Angle="180" CenterX="3" CenterY="3" />
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Setter TargetName="ExpandPath" Property="Shape.Fill" Value="#FF595959"/>
                                                            <Setter TargetName="ExpandPath" Property="Shape.Stroke" Value="#FF262626"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ToggleButton.Style>
                            </ToggleButton>
                            <Grid Grid.Column="1">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <ContentPresenter Content="{TemplateBinding HeaderedContentControl.Header}" ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}" ContentStringFormat="{TemplateBinding HeaderedItemsControl.HeaderStringFormat}" ContentSource="Header" Name="PART_Header" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                <ItemsPresenter Name="ItemsHost" Grid.Row="1"/>
                            </Grid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter TargetName="Bd" Property="Panel.Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                        </Trigger>
                        <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="True">
                            <Setter TargetName="_pv_scrollviewer_" Property="ScrollViewer.CanContentScroll" Value="True">
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ctrl:TextBox" BasedOn="{StaticResource DefaultTextBoxStyle}"/>

    <Style TargetType="ctrl:TimerTextBox" BasedOn="{StaticResource {x:Type ctrl:TextBox}}"/>
    
    <Style TargetType="ctrl:NumericTextBox" BasedOn="{StaticResource {x:Type ctrl:TextBox}}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ctrl:NumericTextBox">
                    <DockPanel LastChildFill="True" Focusable="False">
                        <UniformGrid x:Name="upDownButtons" Rows="2" DockPanel.Dock="Right" Width="11" Height="22" Margin="0,1,1,1" Focusable="False" Visibility="Collapsed">
                            <RepeatButton x:Name="PART_IncreaseButton" Command="{x:Static ctrl:NumericTextBox.SmallIncreaseCommand}">
                                <Grid Margin="0" Background="Transparent">
                                    <Path HorizontalAlignment="Stretch" Width="Auto" Fill="{StaticResource GlyphBrush}" Stretch="Fill" Stroke="{StaticResource GlyphBrush}" StrokeThickness="1" Data="M5.2422477,11.132184 L11.5544,11.132184 8.6412958,4.4969033 z" RenderTransformOrigin="0.5,0.5"/>
                                </Grid>
                            </RepeatButton>
                            <RepeatButton x:Name="PART_DecreaseButton" Command="{x:Static ctrl:NumericTextBox.SmallDecreaseCommand}">
                                <Grid Margin="0" Background="Transparent">
                                    <Path HorizontalAlignment="Stretch" Width="Auto" Fill="{StaticResource GlyphBrush}" Stretch="Fill" Stroke="{StaticResource GlyphBrush}" StrokeThickness="1" Data="M5.2422477,11.132184 L11.5544,11.132184 8.6412958,4.4969033 z" RenderTransformOrigin="0.5,0.5">
                                        <Path.RenderTransform>
                                            <RotateTransform Angle="180"/>
                                        </Path.RenderTransform>
                                    </Path>
                                </Grid>
                            </RepeatButton>
                        </UniformGrid>
                        <mwt:ListBoxChrome Background="{TemplateBinding Panel.Background}" BorderBrush="{TemplateBinding Border.BorderBrush}" BorderThickness="{TemplateBinding Border.BorderThickness}" RenderMouseOver="{TemplateBinding UIElement.IsMouseOver}" RenderFocused="{TemplateBinding UIElement.IsKeyboardFocusWithin}" Name="Bd" SnapsToDevicePixels="True">
                            <Grid>
                                <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Padding="{TemplateBinding Padding}" Visibility="{TemplateBinding IsFocused, Converter={cvt:VisibleOrCollapsed}}"/>
                                <TextBlock x:Name="PART_TrimmedText" Text="{TemplateBinding TrimmedText}" Margin="3,2" Focusable="False" Visibility="{TemplateBinding IsFocused, Converter={cvt:Chained {cvt:InvertBool}, {cvt:VisibleOrCollapsed}}}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                        </mwt:ListBoxChrome>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="DisplayUpDownButtons" Value="True">
                            <Setter TargetName="upDownButtons" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_TrimmedText" Property="Foreground" Value="Gray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ctrl:SliderTextBox" BasedOn="{StaticResource {x:Type ctrl:NumericTextBox}}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ctrl:SliderTextBox">
                    <DockPanel LastChildFill="True" Focusable="False">
                        <UniformGrid x:Name="upDownButtons" Rows="2" DockPanel.Dock="Right" Width="11" Height="22" Margin="0,1,1,1" Focusable="False" Visibility="Collapsed">
                            <RepeatButton x:Name="PART_IncreaseButton" Command="{x:Static ctrl:SliderTextBox.SmallIncreaseCommand}">
                                <Grid Margin="0" Background="Transparent">
                                    <Path HorizontalAlignment="Stretch" Width="Auto" Fill="{StaticResource GlyphBrush}" Stretch="Fill" Stroke="{StaticResource GlyphBrush}" StrokeThickness="1" Data="M5.2422477,11.132184 L11.5544,11.132184 8.6412958,4.4969033 z" RenderTransformOrigin="0.5,0.5"/>
                                </Grid>
                            </RepeatButton>
                            <RepeatButton x:Name="PART_DecreaseButton" Command="{x:Static ctrl:SliderTextBox.SmallDecreaseCommand}">
                                <Grid Margin="0" Background="Transparent">
                                    <Path HorizontalAlignment="Stretch" Width="Auto" Fill="{StaticResource GlyphBrush}" Stretch="Fill" Stroke="{StaticResource GlyphBrush}" StrokeThickness="1" Data="M5.2422477,11.132184 L11.5544,11.132184 8.6412958,4.4969033 z" RenderTransformOrigin="0.5,0.5">
                                        <Path.RenderTransform>
                                            <RotateTransform Angle="180"/>
                                        </Path.RenderTransform>
                                    </Path>
                                </Grid>
                            </RepeatButton>
                        </UniformGrid>
                        <Grid Focusable="False">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <mwt:ListBoxChrome Background="{TemplateBinding Panel.Background}" BorderBrush="{TemplateBinding Border.BorderBrush}" BorderThickness="{TemplateBinding Border.BorderThickness}" RenderMouseOver="{TemplateBinding UIElement.IsMouseOver}" RenderFocused="{TemplateBinding UIElement.IsKeyboardFocusWithin}" Name="Bd" SnapsToDevicePixels="True">
                                <Grid>
                                    <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Padding="{TemplateBinding Padding}" Visibility="{TemplateBinding IsFocused, Converter={cvt:VisibleOrCollapsed}}"/>
                                    <TextBlock x:Name="PART_TrimmedText" Text="{TemplateBinding TrimmedText}" Margin="3,2" Focusable="False" Visibility="{TemplateBinding IsFocused, Converter={cvt:Chained {cvt:InvertBool}, {cvt:VisibleOrCollapsed}}}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Grid>
                            </mwt:ListBoxChrome>
                            <Rectangle x:Name="range" Grid.Row="1" Height="3" Fill="{TemplateBinding RangeIndicatorBrush}" HorizontalAlignment="Stretch" VerticalAlignment="Bottom">
                                <Rectangle.RenderTransform>
                                    <ScaleTransform ScaleX="{Binding ValueRatio, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                </Rectangle.RenderTransform>
                            </Rectangle>
                        </Grid>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="DisplayRangeIndicator" Value="False">
                            <Setter TargetName="range" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="DisplayUpDownButtons" Value="True">
                            <Setter TargetName="upDownButtons" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_TrimmedText" Property="Foreground" Value="Gray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
        
    <!--<Style TargetType="{x:Type ctrl:DoublePaneContainer}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrl:DoublePaneContainer}">
                    <layout:DoublePaneGrid Focusable="False" Background="{TemplateBinding Background}">
                        <ContentPresenter ContentSource="Header" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Focusable="False"/>
                        <ContentPresenter ContentSource="Content" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Focusable="False"/>
                    </layout:DoublePaneGrid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <Style x:Key="DefaultLogViewerStyle" TargetType="ctrl:TextLogViewer">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ctrl:TextLogViewer">
                    <DockPanel>
                        <ToolBarTray DockPanel.Dock="Top" Visibility="{Binding IsToolBarVisible, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={cvt:VisibleOrCollapsed}}">
                            <ToolBar Visibility="{Binding CanClearLog, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={cvt:VisibleOrCollapsed}}">
                                <Button x:Name="PART_ClearLog" Content="Clear"/>
                            </ToolBar>
                            <ToolBar Header="Filters" Visibility="{Binding CanFilterLog, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={cvt:VisibleOrCollapsed}}">
                                <ToggleButton Padding="4,0" Content="Debug" IsChecked="{Binding ShowDebugMessages, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                <ToggleButton Padding="4,0" Content="Verbose" IsChecked="{Binding ShowVerboseMessages, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                <ToggleButton Padding="4,0" Content="Infomation" IsChecked="{Binding ShowInfoMessages, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                <ToggleButton Padding="4,0" Content="Warnings" IsChecked="{Binding ShowWarningMessages, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                <ToggleButton Padding="4,0" Content="Errors" IsChecked="{Binding ShowErrorMessages, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                <ToggleButton Padding="4,0" Content="Fatal errors" IsChecked="{Binding ShowFatalMessages, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                <Separator/>
                            </ToolBar>
                            <ToolBar Header="Search" Visibility="{Binding CanSearchLog, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={cvt:VisibleOrCollapsed}}">
                                <ctrl:TimerTextBox x:Name="PART_SearchTextBox" Width="150" Text="{Binding SearchToken, RelativeSource={RelativeSource Mode=TemplatedParent}}" WatermarkContent="Search"/>
                                <Button Padding="4,0" x:Name="PART_PreviousResult" Content="&lt;"/>
                                <Button Padding="4,0" x:Name="PART_NextResult" Content="&gt;"/>
                                <ToggleButton Padding="4,0" IsChecked="{Binding SearchMatchCase, RelativeSource={RelativeSource Mode=TemplatedParent}}" Content="Match case"/>
                                <ToggleButton Padding="4,0" IsChecked="{Binding SearchMatchWord, RelativeSource={RelativeSource Mode=TemplatedParent}}" Content="Match whole word"/>
                            </ToolBar>
                        </ToolBarTray>
                        <RichTextBox x:Name="PART_LogTextBox" IsReadOnly="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" FontFamily="Consolas, Courrier New" FontSize="11"/>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ctrl:TextLogViewer" BasedOn="{StaticResource DefaultLogViewerStyle}"/>
    
</ResourceDictionary>
