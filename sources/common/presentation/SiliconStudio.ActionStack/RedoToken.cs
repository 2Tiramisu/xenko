using System;

namespace SiliconStudio.ActionStack
{
    /// <summary>
    /// Represents a token that stores an unique identifier and an object. This token should be generated by
    /// the undo operation of a cancellable command and be passed as argument when the command must be redone.
    /// </summary>
    /// <remarks>This object is immutable.</remarks>
    public struct RedoToken
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="RedoToken"/> structure with some parameters.
        /// </summary>
        /// <param name="tokenValue">The object stored in this token which can be used to redo the associated action (such as previous value of a property).</param>
        public RedoToken(object tokenValue = null)
        {
            Guid = Guid.NewGuid();
            TokenValue = tokenValue;
        }

        /// <summary>
        /// Gets a unique identifier for the token.
        /// </summary>
        public Guid Guid { get; }

        /// <summary>
        /// Gets a user-defined object hosted by the token that should store all information needed to redo a command.
        /// </summary>
        public object TokenValue { get; }
    }
}