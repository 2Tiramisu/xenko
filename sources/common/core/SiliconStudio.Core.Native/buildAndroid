#!/bin/bash

# For more info about standalone toolchain, see https://developer.android.com/ndk/guides/standalone_toolchain.html

# Set local variables
MAKEFILE=Makefile
CLANG_VERSION=clang3.6
NDK_STANDALONE_DIR=~/ndk-standalone
INSTALL_DIR_BASE=bin/Android
OUTPUT_LIB_NAME=libcore.so

# Add the compiler path to the path
export PATH=$NDK_STANDALONE_DIR/bin:$PATH

function CreateStandaloneCompiler
{
	TOOLCHAIN=$1-$CLANG_VERSION
	ANDROID_TARGET_PLATFORM=$2

	rm -r $NDK_STANDALONE_DIR
	~/android-ndk-r10e/build/tools/make-standalone-toolchain.sh --platform=$ANDROID_TARGET_PLATFORM --install-dir=$NDK_STANDALONE_DIR --toolchain=$TOOLCHAIN
}

function BuildAndInstallAndroid
{
	ARCHI=$1
	unset ARCHI_CFLAGS ARCHI_LDFLAGS

	if [ "$ARCHI" = "armeabi-v7a" ]; then
		ARCHI_CFLAGS="-march=armv7-a -mfloat-abi=softfp -mfpu=neon -D_ARM_ARCH_7" 
		ARCHI_LDFLAGS="-march=armv7-a -Wl,--fix-cortex-a8"
	elif [ "$ARCHI" = "arm64-v8a" ]; then
		ARCHI_CFLAGS="-march=armv8-a" 
		ARCHI_LDFLAGS="-march=armv8-a"
	fi

	# Set compilation flags
	unset CFLAGS CC LDFLAGS MAIN_NAME INSTALL_DIR
	export CC=clang
	export LDFLAGS="$ARCHI_LDFLAGS -shared"
	export CFLAGS="$ARCHI_CFLAGS -O3 -c -DEXPORT -DPLATFORM_ANDROID"
	export MAIN_NAME=$OUTPUT_LIB_NAME
	export INSTALL_DIR=$INSTALL_DIR_BASE/$ARCHI

	# Build  and install the library 
	make -f $MAKEFILE clean
	make -f $MAKEFILE $MAIN_NAME
	make -f $MAKEFILE install
}

CreateStandaloneCompiler arm-linux-androideabi android-9
BuildAndInstallAndroid armeabi 
BuildAndInstallAndroid armeabi-v7a 

CreateStandaloneCompiler aarch64-linux-android android-21
BuildAndInstallAndroid arm64-v8a 

CreateStandaloneCompiler x86 android-9
BuildAndInstallAndroid x86

CreateStandaloneCompiler x86_64 android-21
BuildAndInstallAndroid x86_64 
