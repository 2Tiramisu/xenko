// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 12.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace SiliconStudio.Paradox.VisualStudio.Commands.DataGenerator
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using SiliconStudio.AssemblyProcessor;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "12.0.0.0")]
    public partial class DataConverterGenerator : DataConverterGeneratorBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            this.Write(@"// <auto-generated>
// Do not edit this file yourself!
//
// This code was generated by Paradox Data Code Generator.
// To generate it yourself, please install SiliconStudio.Paradox.VisualStudio.Package .vsix
// and re-save the associated .pdxdata.
// </auto-generated>

namespace ");
            
            #line 15 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(assembly.Name.Name));
            
            #line default
            #line hidden
            this.Write(".Data\r\n{\r\n    /// <summary>\r\n    /// Module initializer for data types of assembl" +
                    "y ");
            
            #line 18 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(assembly.Name.Name));
            
            #line default
            #line hidden
            this.Write(".\r\n    /// </summary>\r\n    class DataInitializer\r\n    {\r\n        [SiliconStudio.C" +
                    "ore.ModuleInitializer]\r\n        internal static void Initialize()\r\n        {\r\n");
            
            #line 25 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
foreach (var type in processedConverterTypes)
{
	var dataConverterInfo = type.Value;

            
            #line default
            #line hidden
            this.Write("            // Register type ");
            
            #line 29 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dataConverterInfo.DataInfo.Type.Name));
            
            #line default
            #line hidden
            this.Write("\r\n            SiliconStudio.Core.Serialization.Converters.ConverterContext.Regist" +
                    "erConverter(new ");
            
            #line 30 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dataConverterInfo.Type.ConvertCSharp()));
            
            #line default
            #line hidden
            this.Write("());\r\n");
            
            #line 31 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
 if ((dataConverterInfo.DataInfo.Flags & DataTypeFlags.EntityComponent) != 0) { 
            
            #line default
            #line hidden
            this.Write("            // Register entity component reference for type ");
            
            #line 32 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dataConverterInfo.DataInfo.Type.Name));
            
            #line default
            #line hidden
            this.Write("\r\n            SiliconStudio.Core.Serialization.Converters.ConverterContext.Regist" +
                    "erConverter(new SiliconStudio.Paradox.EntityModel.EntityComponentReferenceDataCo" +
                    "nverter<");
            
            #line 33 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(type.Key.ConvertCSharp()));
            
            #line default
            #line hidden
            this.Write(">());\r\n");
            
            #line 34 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
 } } // foreach (var type in processedConverterTypes)
            
            #line default
            #line hidden
            this.Write("        }\r\n    }\r\n}\r\n\r\n");
            
            #line 39 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
foreach (var type in processedTypes)
{
	var dataTypeInfo = type.Value;
	var isAutoGenerated = (type.Value.Flags & DataTypeFlags.Generated) != 0;
	ChangeNamespace(dataTypeInfo.Type.Namespace);

            
            #line default
            #line hidden
            this.Write("    /// <summary>\r\n    /// Data type for <see cref=\"");
            
            #line 46 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(type.Key.ConvertCSharp()));
            
            #line default
            #line hidden
            this.Write("\"/>.\r\n    /// </summary>\r\n    [SiliconStudio.Core.DataContract(\"");
            
            #line 48 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dataTypeInfo.Type.Name + dataTypeInfo.Type.GenerateGenerics()));
            
            #line default
            #line hidden
            this.Write("\")]\r\n");
            
            #line 49 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
if ((type.Value.Flags & DataTypeFlags.ContentReference) != 0) {
            
            #line default
            #line hidden
            this.Write("    [SiliconStudio.Core.Serialization.Contents.ContentSerializer(typeof(SiliconSt" +
                    "udio.Core.Serialization.Contents.DataContentSerializer<");
            
            #line 50 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dataTypeInfo.Type.Name + dataTypeInfo.Type.GenerateGenerics()));
            
            #line default
            #line hidden
            this.Write(">))]\r\n    [SiliconStudio.Core.Serialization.Contents.ContentSerializer(typeof(Sil" +
                    "iconStudio.Core.Serialization.Converters.DataContentConverterSerializer<");
            
            #line 51 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dataTypeInfo.Type.Name + dataTypeInfo.Type.GenerateGenerics()));
            
            #line default
            #line hidden
            this.Write(", ");
            
            #line 51 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(type.Key.ConvertCSharp()));
            
            #line default
            #line hidden
            this.Write(">))]\r\n");
            
            #line 52 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
}
            
            #line default
            #line hidden
            this.Write("    public partial class ");
            
            #line 53 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dataTypeInfo.Type.Name + dataTypeInfo.Type.GenerateGenerics()));
            
            #line default
            #line hidden
            
            #line 53 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
 if (type.Value.BaseType != null) { 
            
            #line default
            #line hidden
            this.Write(" : ");
            
            #line 53 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(type.Value.BaseType.ConvertCSharp()));
            
            #line default
            #line hidden
            
            #line 53 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
}
            
            #line default
            #line hidden
            this.Write("\r\n    {\r\n");
            
            #line 56 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
if (isAutoGenerated) {
    bool firstLine = true;
	foreach (var property in type.Value.Properties) {
      if (!firstLine) { this.Write("\r\n"); }
	  firstLine = false;
            
            #line default
            #line hidden
            this.Write("        /// <summary>\r\n        /// Data field for <see cref=\"");
            
            #line 62 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(type.Key.ConvertCSharp()));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 62 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(property.Name));
            
            #line default
            #line hidden
            this.Write("\"/>.\r\n        /// </summary>\r\n        public ");
            
            #line 64 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(property.DataType.ConvertCSharp()));
            
            #line default
            #line hidden
            this.Write(" ");
            
            #line 64 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(property.Name));
            
            #line default
            #line hidden
            
            #line 64 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"

// Add object initialization code (usually for List/Dictionary)
if (property.InitializerType != null) {
            
            #line default
            #line hidden
            this.Write(" = new ");
            
            #line 66 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(property.InitializerType.ConvertCSharp()));
            
            #line default
            #line hidden
            this.Write("()");
            
            #line 66 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
} 
            
            #line default
            #line hidden
            this.Write(";\r\n");
            
            #line 67 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
} // end foreach
} // end if
            
            #line default
            #line hidden
            this.Write("    }\r\n\r\n");
            
            #line 71 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
} // end while
            
            #line default
            #line hidden
            this.Write("\r\n\r\n");
            
            #line 74 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
foreach (var type in processedConverterTypes)
{
	var dataConverterInfo = type.Value;
	var dataTypeInfo = dataConverterInfo.DataInfo;
	var isAutoGenerated = dataConverterInfo.Generate;

	var objectTypeCSharp = type.Key.ConvertCSharp();
	var dataTypeCSharp = dataTypeInfo.Type.ConvertCSharp();

	var baseType = type.Key.BaseType != null? type.Key.BaseType.Resolve(): null;
	var baseTypeFlags = baseType != null? GetDataTypeFlags(baseType): null;
	var isInherited = baseTypeFlags != null && (baseTypeFlags.Value & DataTypeFlags.NoDataType) == 0;
	var baseDataType = isInherited? GetDataType(baseType): null;
	var baseConverterType = isInherited? GetDataConverterType(baseType): null;

	if (isAutoGenerated)
	{
			ChangeNamespace(dataConverterInfo.Type.Namespace);

            
            #line default
            #line hidden
            this.Write("    /// <summary>\r\n    /// Converter type for <see cref=\"");
            
            #line 94 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(type.Key.ConvertCSharp()));
            
            #line default
            #line hidden
            this.Write("\"/>.\r\n    /// </summary>\r\n    public partial class ");
            
            #line 96 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dataConverterInfo.Type.Name));
            
            #line default
            #line hidden
            
            #line 96 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dataConverterInfo.Type.GenerateGenerics()));
            
            #line default
            #line hidden
            this.Write(" : ");
            
            #line 96 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
if(isInherited){
            
            #line default
            #line hidden
            
            #line 96 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(baseConverterType.ConvertCSharp()));
            
            #line default
            #line hidden
            
            #line 96 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
}else{
            
            #line default
            #line hidden
            this.Write("SiliconStudio.Core.Serialization.Converters.DataConverter<");
            
            #line 96 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dataTypeCSharp));
            
            #line default
            #line hidden
            this.Write(", ");
            
            #line 96 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(objectTypeCSharp));
            
            #line default
            #line hidden
            this.Write(">");
            
            #line 96 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
}
            
            #line default
            #line hidden
            this.Write("\t\r\n\t{\r\n");
            
            #line 99 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
if(isInherited){
            
            #line default
            #line hidden
            this.Write("\t\t/// <inheritdoc/>\r\n\t\tpublic override System.Type DataType\r\n\t\t{\r\n\t\t\tget { return" +
                    " typeof(");
            
            #line 103 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dataTypeCSharp));
            
            #line default
            #line hidden
            this.Write("); }\r\n\t\t}\r\n\r\n\t\t/// <inheritdoc/>\r\n\t\tpublic override System.Type ObjectType\r\n\t\t{\r\n" +
                    "\t\t\tget { return typeof(");
            
            #line 109 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(objectTypeCSharp));
            
            #line default
            #line hidden
            this.Write("); }\r\n\t\t}\r\n\t\t\t\t\r\n        /// <inheritdoc/>\r\n        public override void ConvertF" +
                    "romData(SiliconStudio.Core.Serialization.Converters.ConverterContext converterCo" +
                    "ntext, object data, ref object obj)\r\n        {\r\n            var dataT = (");
            
            #line 115 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dataTypeCSharp));
            
            #line default
            #line hidden
            this.Write(")data;\r\n            var objT = (");
            
            #line 116 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(objectTypeCSharp));
            
            #line default
            #line hidden
            this.Write(@")obj;
            ConvertFromData(converterContext, dataT, ref objT);
            obj = objT;
        }
		
        /// <inheritdoc/>
        public override void ConvertToData(SiliconStudio.Core.Serialization.Converters.ConverterContext converterContext, ref object data, object obj)
        {
            var dataT = (");
            
            #line 124 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dataTypeCSharp));
            
            #line default
            #line hidden
            this.Write(")data;\r\n            var objT = (");
            
            #line 125 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(objectTypeCSharp));
            
            #line default
            #line hidden
            this.Write(")obj;\r\n            ConvertToData(converterContext, ref dataT, objT);\r\n           " +
                    " data = dataT;\r\n        }\r\n\r\n\t\t");
            
            #line 130 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
 } 
            
            #line default
            #line hidden
            
            #line 131 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
if ((dataTypeInfo.Flags & DataTypeFlags.CustomConvertToData) == 0) {
            
            #line default
            #line hidden
            this.Write("        /// <inheritdoc/>\r\n        public ");
            
            #line 133 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
if(!isInherited){
            
            #line default
            #line hidden
            this.Write("override ");
            
            #line 133 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
}
            
            #line default
            #line hidden
            this.Write("void ConvertToData(SiliconStudio.Core.Serialization.Converters.ConverterContext c" +
                    "ontext, ref ");
            
            #line 133 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dataTypeCSharp));
            
            #line default
            #line hidden
            this.Write(" target, ");
            
            #line 133 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(objectTypeCSharp));
            
            #line default
            #line hidden
            this.Write(" source)\r\n        {\r\n");
            
            #line 135 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
if(!dataTypeInfo.Type.IsValueType){
            
            #line default
            #line hidden
            this.Write("\t\t\tif(target == null)\r\n                target = new ");
            
            #line 137 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dataTypeCSharp));
            
            #line default
            #line hidden
            this.Write("();\r\n\t\t\t\t\r\n");
            
            #line 139 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
}
            
            #line default
            #line hidden
            
            #line 140 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
if(isInherited){
            
            #line default
            #line hidden
            this.Write("\t\t\t{\r\n\t\t\t\tvar targetBase = (");
            
            #line 142 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(baseDataType.ConvertCSharp()));
            
            #line default
            #line hidden
            this.Write(")target;\r\n\t\t\t\tvar sourceBase = (");
            
            #line 143 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(baseType.ConvertCSharp()));
            
            #line default
            #line hidden
            this.Write(")source;\r\n\t\t\t\tConvertToData(context, ref targetBase, sourceBase);\r\n\t\t\t}\r\n\r\n");
            
            #line 147 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
 } 
            
            #line default
            #line hidden
            
            #line 148 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
foreach (var property in dataTypeInfo.Properties) {
if (property.DataType == property.OriginalType) {
            
            #line default
            #line hidden
            this.Write("            target.");
            
            #line 150 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(property.Name));
            
            #line default
            #line hidden
            this.Write(" = source.");
            
            #line 150 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(property.Name));
            
            #line default
            #line hidden
            this.Write(";\r\n");
            
            #line 151 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
} else {
            
            #line default
            #line hidden
            this.Write("            context.ConvertToData(ref target.");
            
            #line 152 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(property.Name));
            
            #line default
            #line hidden
            this.Write(", source.");
            
            #line 152 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(property.Name));
            
            #line default
            #line hidden
            this.Write(");\r\n");
            
            #line 153 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
}} // end foreach
            
            #line default
            #line hidden
            this.Write("        }\r\n");
            
            #line 155 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
} // if DataTypeFlags.CustomConvertToData
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 157 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
if ((dataTypeInfo.Flags & DataTypeFlags.CustomConvertFromData) == 0) {
            
            #line default
            #line hidden
            
            #line 158 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
 if ((dataConverterInfo.DataInfo.Flags & DataTypeFlags.EntityComponent) != 0) { 
            
            #line default
            #line hidden
            this.Write("        public override bool CanConstruct\r\n        {\r\n            get { return tr" +
                    "ue; }\r\n        }\r\n\t\t\r\n");
            
            #line 164 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
if(isInherited){
            
            #line default
            #line hidden
            this.Write("\t\t\r\n        /// <inheritdoc/>\r\n        public override void ConstructFromData(Sil" +
                    "iconStudio.Core.Serialization.Converters.ConverterContext converterContext, obje" +
                    "ct data, ref object obj)\r\n        {\r\n            var dataT = (");
            
            #line 168 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dataTypeCSharp));
            
            #line default
            #line hidden
            this.Write(")data;\r\n            var objT = (");
            
            #line 169 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(objectTypeCSharp));
            
            #line default
            #line hidden
            this.Write(")obj;\r\n            ConstructFromData(converterContext, dataT, ref objT);\r\n       " +
                    "     obj = objT;\r\n        }\r\n\r\n");
            
            #line 174 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
}
            
            #line default
            #line hidden
            this.Write("\t\t/// <inheritdoc/>\r\n        public ");
            
            #line 176 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
if(!isInherited){
            
            #line default
            #line hidden
            this.Write("override ");
            
            #line 176 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
}
            
            #line default
            #line hidden
            this.Write("void ConstructFromData(SiliconStudio.Core.Serialization.Converters.ConverterConte" +
                    "xt context, ");
            
            #line 176 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dataTypeCSharp));
            
            #line default
            #line hidden
            this.Write(" target, ref ");
            
            #line 176 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(objectTypeCSharp));
            
            #line default
            #line hidden
            this.Write(" source)\r\n\t\t{\r\n\t\t\tsource = new ");
            
            #line 178 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(objectTypeCSharp));
            
            #line default
            #line hidden
            this.Write("();\r\n\t\t}\r\n\r\n");
            
            #line 181 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
 } 
            
            #line default
            #line hidden
            this.Write("        /// <inheritdoc/>\r\n        public ");
            
            #line 183 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
if(!isInherited){
            
            #line default
            #line hidden
            this.Write("override ");
            
            #line 183 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
}
            
            #line default
            #line hidden
            this.Write("void ConvertFromData(SiliconStudio.Core.Serialization.Converters.ConverterContext" +
                    " context, ");
            
            #line 183 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(dataTypeCSharp));
            
            #line default
            #line hidden
            this.Write(" target, ref ");
            
            #line 183 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(objectTypeCSharp));
            
            #line default
            #line hidden
            this.Write(" source)\r\n        {\r\n");
            
            #line 185 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
 // EntityComponent have a separate ConstructFromData
   if ((dataConverterInfo.DataInfo.Flags & DataTypeFlags.EntityComponent) == 0) { 
            
            #line default
            #line hidden
            
            #line 187 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
if(!type.Key.IsValueType){
            
            #line default
            #line hidden
            this.Write("            if(source == null)\r\n                source = new ");
            
            #line 189 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(objectTypeCSharp));
            
            #line default
            #line hidden
            this.Write("();\r\n\r\n");
            
            #line 191 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
}
            
            #line default
            #line hidden
            
            #line 192 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
if(isInherited){
            
            #line default
            #line hidden
            this.Write("\t\t\t{\r\n\t\t\t\tvar targetBase = (");
            
            #line 194 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(baseDataType.ConvertCSharp()));
            
            #line default
            #line hidden
            this.Write(")target;\r\n\t\t\t\tvar sourceBase = (");
            
            #line 195 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(baseType.ConvertCSharp()));
            
            #line default
            #line hidden
            this.Write(")source;\r\n\t\t\t\tConvertFromData(context, targetBase, ref sourceBase);\r\n\t\t\t}\r\n\r\n");
            
            #line 199 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
 } 
            
            #line default
            #line hidden
            
            #line 200 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
 } 
            
            #line default
            #line hidden
            
            #line 201 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
foreach (var property in dataTypeInfo.Properties) {
if (property.DataType == property.OriginalType) {
            
            #line default
            #line hidden
            this.Write("            source.");
            
            #line 203 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(property.Name));
            
            #line default
            #line hidden
            this.Write(" = target.");
            
            #line 203 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(property.Name));
            
            #line default
            #line hidden
            this.Write(";\r\n");
            
            #line 204 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
} else {
            
            #line default
            #line hidden
            this.Write("            {\r\n                var temp = source.");
            
            #line 206 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(property.Name));
            
            #line default
            #line hidden
            this.Write(";\r\n                context.ConvertFromData(target.");
            
            #line 207 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(property.Name));
            
            #line default
            #line hidden
            this.Write(", ref temp);\r\n");
            
            #line 208 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
if (property.HasPublicSetAccessor) {
            
            #line default
            #line hidden
            this.Write("                source.");
            
            #line 209 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(property.Name));
            
            #line default
            #line hidden
            this.Write(" = temp;\r\n");
            
            #line 210 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
} // if (property.HasPublicSetAccessor)
            
            #line default
            #line hidden
            this.Write("            }\r\n");
            
            #line 212 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
}} // end foreach
            
            #line default
            #line hidden
            this.Write("        }\r\n");
            
            #line 214 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
} // if DataTypeFlags.CustomConvertFromData
            
            #line default
            #line hidden
            this.Write("    }\r\n");
            
            #line 216 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
} // end if
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 218 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
} // end while
            
            #line default
            #line hidden
            
            #line 219 "C:\DEV\paradox\sources\tools\SiliconStudio.Paradox.VisualStudio.Commands\DataGenerator\DataConverterGenerator.tt"
 ChangeNamespace(string.Empty); 
            
            #line default
            #line hidden
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "12.0.0.0")]
    public class DataConverterGeneratorBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
