<#@ template language="C#" visibility="internal" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
// AUTO-GENERATED, DO NOT MODIFY!
using System;
using SiliconStudio.Paradox.Effects;
using SiliconStudio.Paradox.Graphics;
using SiliconStudio.Core.Mathematics;
using Buffer = SiliconStudio.Paradox.Graphics.Buffer;

namespace SiliconStudio.Paradox.Effects.Modules
{
<#if (ShaderKeyClass != null) {#>
    public static partial class <#=ShaderKeyClass.Name#>
    {
<#foreach (var shaderKeyVariable in ShaderKeyClass.Variables) {
#>
        public static readonly ParameterKey<<#=shaderKeyVariable.Type#>> <#=shaderKeyVariable.Name#> = <#if (shaderKeyVariable.Map == null){#>ParameterKeys.New<<#=shaderKeyVariable.Type#>>(<#=shaderKeyVariable.InitialValue ?? string.Empty#>)<#}else{#><#=shaderKeyVariable.Map#><#}#>;
<#}#>
    }
<#}#>
}